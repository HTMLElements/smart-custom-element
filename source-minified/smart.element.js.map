{"version":3,"sources":["smart.element.js"],"names":["LocalizationModule","babelHelpers","classCallCheck","this","createClass","key","value","messageKey","messages","that","Object","assign","messageArguments","locale","message","defaultMessage","messageName","messageValue","replace","RegExp","localizeFormatFunction","get","en","type","inherit","reflectToAttribute","undefined","ErrorModule","_logger","level","error","debugMode","errorMessage","Error","toString","console","rethrowError","BindingModule","node","index","map","boundData","HTMLElement","parseAttributes","boundProperty","parseProperty","data","parentNode","ownerElement","$","content","html","innerHTML","textContent","getAttribute","nodeId","firstChild","children","child","nextSibling","getBindings","htmlElement","boundProperties","i","attributes","length","attribute","attributeName","name","attributeValue","cache","Utilities","Core","toCamelCase","propertyName","indexOf","eventName","substring","dataContext","handlerName","isEvent","templateListeners","removeAttribute","text","startIndex","lastIndex","endIndex","twoWay","twoWayStart","terminator","pathString","slice","trim","elementProperty","_properties","ready","updateTextNode","shadowRoot","bindings","element","boundPropertyName","updating","propertyConfig","updateBoundNode","detachedChildren","smartId","_node","result","detached","_child","childId","childBindings","binding","defaultValue","isNativeElement","toDash","oldValue","getAttributeValue","setAttributeValue","isCustomElement","_attributeName","_beforeCreatedProperties","propertyByAttributeName","isUpdating","updateToken","_attributeName2","_oldValue","eventIndex","listen","updateBoundProperty","notify","_attributeName3","event","detail","context","document","Types","constructor","call","apply","Array","isArray","typeof","isFunction","Date","types","find","toLowerCase","Ripple","left","top","target","getElementsByClassName","span","createElement","classList","add","firstElementChild","noRipple","offsetHeight","appendChild","ripple","remove","style","height","width","Math","max","offsetWidth","rect","getBoundingClientRect","x","window","pageXOffset","y","pageYOffset","addEventListener","handler","parentElement","removeChild","removeEventListener","Easings","t","b","c","d","cos","PI","sin","pow","sqrt","s","p","a","abs","asin","easeOutBounce","easeInBounce","g","toUpperCase","split","join","entityMap","&","<",">","\"","'","/","`","=","String","CSS","supports","source","_this","isObject","item","output","keys","forEach","defineProperty","htmlString","nodes","childNodes","rxhtmlTag","l","miscElements","tagName","attr","attrs","nodeOutput","j","escapeHTML","test","navigator","userAgent","versionSearchString","version","dataString","rv","parseFloat","string","subString","identity","appVersion","styleObservedElements","StyleObserver","push","interval","clearInterval","setInterval","observe","computedStyle","defaultView","getComputedStyle","canRaiseResize","styleProperties","_styleInfo","isHidden","visibilityChangedHandler","changedStyleProperties","_i","_styleProperty","fireEvent","bubbles","cancelable","styleProperty","observeElement","splice","dataContextObservedObjects","dataContextInfo","DataContextObserver","changedProperties","getDataContextPropertyValue","path","dataBoundObject","_uid","now","random","substr","_propertyName","propertyValue","propertyType","JSON","stringify","$document","properties","observeContext","inputEventTypes","InputEvents","$target","_Extend","id","handlers","boundEventTypes","bind","unlisten","tapHoldDelay","swipeMin","swipeMax","swipeDelay","inputEventProperties","eventType","moveEvent","createEvent","resizeTrigger","container","className","expand","expandChild","shrink","reset","scrollLeft","scrollTop","dirty","requestAnimationFrameId","newWidth","newHeight","lastWidth","lastHeight","resizeHandler","requestAnimationFrame","requiresLayout","resizeEvent","CustomEvent","resize","isListening","isPressed","isReleased","isInBounds","PointerEvent","pointerDown","pointerUp","pointerMove","pointerCancel","touchMove","touchStart","touchEnd","touchCancel","mouseDown","mouseUp","mouseMove","mouseLeave","handleDocumentUp","resetSwipe","touches","changedTouches","touch","customEvent","originalEvent","_key","clearTimeout","tapHoldTimeout","tapHoldFired","tap","setTimeout","taphold","handleDown","touchStartTime","isTouchMoved","touchEndTime","handleUp","down","initTap","initSwipe","up","fireTap","eventResult","move","_maxSwipeVerticalDistance","_startY","pageY","_maxSwipeHorizontalDistance","_startX","pageX","handleSwipeEvents","handleMove","handleVerticalSwipeEvents","handleHorizontalSwipeEvents","current","diff","swiped","direction","_swipeEvent","_swipeLocked","stopImmediatePropagation","_swipeTimeout","Scroll","horizontalScrollBar","verticalScrollBar","set","autoScroll","elapsed","delta","currentScrollInfo","amplitude","timestamp","exp","timeConstant","scroll","targetValue","cancelAnimationFrame","rafId","isMobile","inputEvents","dragStarted","pointerCaptured","ticker","createScrollInfo","scrollBar","initialValue","min","previousValue","pointerPosition","velocity","hScrollInfo","vScrollInfo","track","updateScrollInfo","scrollInfo","clientY","clientX","startScroll","round","preventDefault","stopPropagation","visible","ratio","dragged","doDrag","verticalDragResult","horizontalDragResult","elapsedScrollTo","scrollTo","vertically","isScrolling","to","from","time","Animation","easeInSine","Extend","events","classNames","contains","hasClass","arguments","handleObjects","handleObject","namespace","defaultPrevented","options","originalStopPropagation","isPropagationStopped","dispatchEvent","typesArray","dispatch","isPassiveSupported","passive","findIndex","o","attributeString","deserialize","nullable","newAttributeValue","serialize","booleans","setAttribute","getType","stringValue","nullValue","NaN","Infinity","parseInt","jsonObject","parse","er","Smart","BaseElement","nodeName","supportsPassive","opts","e","moduleName","module","_HTMLElement","possibleConstructorReturn","__proto__","getPrototypeOf","inherits","onRegistered","isReady","_initElement","_setModuleState","onCreated","isCompleted","_onCompleted","onCompleted","callback","whenReadyCallbacks","_this3","missingModules","requires","getStaticMember","require","modules","_that","localize","elementType","files","dataContextProperties","dataContextListeners","applyDataContext","onReady","updatingDataContext","_boundProperty","dataContextPropertyChangedHandler","property","watch","isAttached","attached","_handleListeners","attributeValueString","attributeValueType","attributeUntypedValue","isNaN","localizedError","actualType","log","isUpdatingFromAttribute","_property","defaultReflectToAttribute","defaultReflectToAttributeConditions","_i2","condition","conditionName","conditionValue","_i3","_node2","applyTemplate","complete","templateBindingsReady","updateTemplateBindings","updateTextNodes","updateBoundNodes","owner","owners","_i4","completed","_i5","templateNodes","querySelectorAll","concat","_completeListeners","_i6","completeEventHandler","completeHandlers","_i7","newValue","attributeChanged","newPropertyValue","hasStyleObserver","onAttached","unwatch","onDetached","propertyChanged","action","listeners","processListeners","listener","template","fragment","createDocumentFragment","tmpElement","templateElement","parseTemplate","importNode","hasChildNodes","rootElement","contentElement","getElementsByTagName","contentInsertionPoint","preudoContentElement","templateNode","$root","addClass","appendTemplate","proto","prototype","addModule","propertyChangedCallback","_watch","stateName","args","statusName","callbackName","modulesList","currentModule","defineModule","defineElementMethods","methodNames","defineElementProperties","isDefined","_initModule","propertyNames","getOwnPropertyNames","configurable","enumerable","memberName","elementName","staticMember","inheritedStaticMember","baseProto","protoChain","methods","extendedProperties","defineElementModules","isCreated","moduleInstance","_i8","isOldChrome","hasOwnProperty","allowedValues","readOnly","observer","extend","validator","defaultValueType","_localizedError","registered","elementProto","invokeMethod","method","methodName","methodContext","excludeMethods","startsWith","excludeMethodName","defaultProperties","updateProperty","isValidValue","allowedValuesString","actualValueString","actualValue","_context","validatedResult","_localizedError2","throwError","_localizedError3","_context2","propertyChangedHandler","updateDataContextProperty","matched","nodeType","activeElement","unfocusable","disabled","readonly","rightToLeft","propertyUnknownType","propertyInvalidValue","propertyInvalidValueType","elementNotInDOM","moduleUndefined","missingReference","htmlTemplateNotSuported","invalidTemplate","Modules","customElements","registeredCallbacks","registeredLoadedCallbacks","chromeAgent","match","isIE","MSInputMethodContext","documentMode","supportsCustomElementsV1","connectElements","readyState","sort","element1","element2","indexA","parents","indexB","isLoading","BaseCustomElement","_BaseElement","created","updateVisibility","setup","BaseCustomElementV1","_BaseElement2","_this5","_externalStylePath","link","rel","href","insertBefore","externalStyle","observedAttributes","_propertyName2","templateStyle","HTMLStyleElement","addExternalStylesheet","scopedStyle","connect","ElementRegistry","defineElement","define","registerElement","toRegister","isRegistering","toRegisterItem","register","existingCallback","modulesLength","elements","_element","lazyRegister","tagNames","Elements","Version","_window$Smart$BaseEle","ContentElement","applyContent","clearContent","currentLength"],"mappings":"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","file":"smart.element.js","sourcesContent":["'use strict';\n\n(function () {\n    'use strict';\n\n    /**\r\n     * This is a base class for localization. Users can implement it in order to handle translations via i18n.\r\n     */\n\n    var LocalizationModule = function () {\n        function LocalizationModule() {\n            babelHelpers.classCallCheck(this, LocalizationModule);\n        }\n\n        babelHelpers.createClass(LocalizationModule, [{\n            key: 'addMessages',\n\n\n            /** \r\n             * Adds messages. \r\n             * @param {String} - the string value's key.\r\n             * @param {Object} - the messages object.\r\n             */\n            value: function addMessages(messageKey, messages) {\n                var that = this;\n\n                Object.assign(that.messages[messageKey], messages);\n            }\n\n            /**\r\n              * Translates a text.\r\n              * @param {String} the string value's key.\r\n              * @param {Object} the values to be replaced in the string.\r\n              * @return {String} the translated text.\r\n             */\n\n        }, {\n            key: 'localize',\n            value: function localize(messageKey, messageArguments) {\n                var that = this;\n\n                if (!that.messages || !that.messages[that.locale]) {\n                    return undefined;\n                }\n\n                var message = that.messages[that.locale][messageKey];\n\n                if (!message) {\n                    return undefined;\n                }\n\n                var defaultMessage = message;\n                for (var messageName in messageArguments) {\n                    var messageValue = messageArguments[messageName];\n                    message = message.replace(new RegExp('{{' + messageName + '}}', 'g'), messageValue);\n                }\n\n                if (that.localizeFormatFunction) {\n                    that.localizeFormatFunction(defaultMessage, message, messageArguments);\n                }\n\n                return message;\n            }\n        }], [{\n            key: 'moduleName',\n            get: function get() {\n                return 'LocalizationModule';\n            }\n        }, {\n            key: 'properties',\n            get: function get() {\n                var properties = {\n                    'messages': {\n                        value: { en: {} },\n                        type: 'object',\n                        inherit: true,\n                        reflectToAttribute: false\n                    },\n                    'locale': {\n                        value: 'en',\n                        type: 'string',\n                        reflectToAttribute: false\n                    },\n                    'localizeFormatFunction': {\n                        value: undefined,\n                        type: 'function',\n                        reflectToAttribute: false\n                    }\n                };\n\n                return properties;\n            }\n        }]);\n        return LocalizationModule;\n    }();\n\n    /**\r\n     * This is a base class for error logging.\r\n     */\n\n\n    var ErrorModule = function () {\n        function ErrorModule() {\n            babelHelpers.classCallCheck(this, ErrorModule);\n        }\n\n        babelHelpers.createClass(ErrorModule, [{\n            key: 'log',\n\n\n            /** Displays a log in the console.*/\n            value: function log(message) {\n                var that = this;\n\n                that._logger('log', message);\n            }\n\n            /** Displays a warning in the console.*/\n\n        }, {\n            key: 'warn',\n            value: function warn(message) {\n                var that = this;\n\n                that._logger('warn', message);\n            }\n\n            /** Displays an error in the console.*/\n\n        }, {\n            key: 'error',\n            value: function error(message) {\n                var that = this;\n\n                that._logger('warn', message);\n            }\n\n            /**\r\n              Logs an Error.\r\n              @param {String} the error's level - 'warn', 'error' or 'log'.\r\n              @param {Error} the error to be logged.\r\n             */\n\n        }, {\n            key: '_logger',\n            value: function _logger(level, error) {\n                var that = this;\n\n                if (that.debugMode) {\n                    var errorMessage = error instanceof Error ? error.message : error.toString();\n\n                    console[level](errorMessage);\n                }\n\n                if (that.rethrowError) {\n                    throw error;\n                }\n            }\n        }], [{\n            key: 'moduleName',\n            get: function get() {\n                return 'ErrorModule';\n            }\n        }, {\n            key: 'properties',\n            get: function get() {\n                var properties = {\n                    'rethrowError': {\n                        value: true,\n                        type: 'boolean',\n                        reflectToAttribute: false\n                    },\n                    'debugMode': {\n                        value: true,\n                        type: 'boolean',\n                        reflectToAttribute: false\n                    }\n                };\n\n                return properties;\n            }\n        }]);\n        return ErrorModule;\n    }();\n\n    /**\r\n     * This is a base class for data binding.\r\n     */\n\n\n    var BindingModule = function () {\n        function BindingModule() {\n            babelHelpers.classCallCheck(this, BindingModule);\n        }\n\n        babelHelpers.createClass(BindingModule, [{\n            key: 'getBindings',\n\n\n            /**\r\n             * @typedef {Object} bindings\r\n             * @property {Array<Node>} children The child nodes.\r\n             * @property {Node} node The node.\r\n             * @property {BindingData} data The node's binding data.\r\n             */\n\n            /**\r\n             * @typedef {Object} BindingData\r\n             * @property {Boolean} twoWay - Deterimes whether it's one way or two way data binding.\r\n             * @property {Boolean} updating - Determines whether the node is in update state.\r\n             * @property {Object}  value - The bound property's value.\r\n             * @property {String}  name - The bound property's name.\r\n             */\n            value: function getBindings(node) {\n                var that = this;\n\n                var index = 0;\n                var map = {};\n                var boundData = function (node) {\n                    if (node instanceof HTMLElement) {\n                        return that.parseAttributes(node);\n                    } else {\n                        var boundProperty = that.parseProperty(node.data, 'textContent', node);\n\n                        if (boundProperty) {\n                            if (node.parentNode === that.ownerElement.$.content) {\n                                boundProperty.value = that.ownerElement.$.html !== '' ? that.ownerElement.$.html : undefined;\n                                that.ownerElement.innerHTML = '';\n                            }\n\n                            return { 'textContent': boundProperty };\n                        }\n                    }\n\n                    return undefined;\n                }(node);\n\n                if (boundData) {\n                    map.data = boundData;\n                }\n\n                if (node.getAttribute) {\n                    map.nodeId = node.getAttribute('smart-id');\n                }\n\n                map.node = node;\n\n                if (node.firstChild) {\n                    map.children = {};\n                }\n\n                for (var child = node.firstChild; child; child = child.nextSibling) {\n                    map.children[index++] = that.getBindings(child);\n                }\n\n                return map;\n            }\n\n            /**\r\n             * Parses the element's attributes.\r\n             * @param {HTMLElement} - html element.\r\n             * @return {Array<BindingData>}\r\n             */\n\n        }, {\n            key: 'parseAttributes',\n            value: function parseAttributes(htmlElement) {\n                var that = this;\n\n                var boundProperties = undefined;\n\n                for (var i = 0; i < htmlElement.attributes.length; i++) {\n                    var attribute = htmlElement.attributes[i];\n                    var attributeName = attribute.name;\n                    var attributeValue = attribute.value;\n                    if (!BindingModule.cache['toCamelCase' + attributeName]) {\n                        BindingModule.cache['toCamelCase' + attributeName] = Utilities.Core.toCamelCase(attributeName);\n                    }\n\n                    var propertyName = BindingModule.cache['toCamelCase' + attributeName];\n\n                    if (attributeName.indexOf('(') >= 0) {\n                        var eventName = attributeName.substring(1, attributeName.length - 1);\n                        if (!that.ownerElement.dataContext) {\n                            that.ownerElement.templateListeners[htmlElement.getAttribute('smart-id') + '.' + eventName] = attributeValue;\n                            htmlElement.removeAttribute(attributeName);\n                            continue;\n                        } else {\n                            if (!boundProperties) {\n                                boundProperties = {};\n                            }\n\n                            var handlerName = attributeValue.substring(0, attributeValue.indexOf('('));\n\n                            boundProperties[propertyName] = { isEvent: true, name: eventName, value: handlerName };\n                            continue;\n                        }\n                    }\n\n                    var boundProperty = that.parseProperty(attributeValue, attributeName, htmlElement);\n                    if (!boundProperty) {\n                        continue;\n                    }\n\n                    if (!boundProperties) {\n                        boundProperties = {};\n                    }\n\n                    boundProperties[propertyName] = boundProperty;\n                }\n\n                return boundProperties;\n            }\n\n            /**\r\n             * Parses a property.\r\n             * @param {String} - The string to parse.\r\n             * @param {name} - property's name.\r\n             * @param {Node} - the node.\r\n             * @return {BindingData}\r\n             */\n\n        }, {\n            key: 'parseProperty',\n            value: function parseProperty(text /*, name, node*/) {\n                if (!text || !text.length) return;\n\n                var that = this;\n\n                var boundProperty = void 0;\n                var length = text.length;\n                var startIndex = 0,\n                    lastIndex = 0,\n                    endIndex = 0;\n                var twoWay = true;\n\n                while (lastIndex < length) {\n                    startIndex = text.indexOf('{{', lastIndex);\n                    var twoWayStart = text.indexOf('[[', lastIndex);\n                    var terminator = '}}';\n\n                    if (twoWayStart >= 0 && (startIndex < 0 || twoWayStart < startIndex)) {\n                        startIndex = twoWayStart;\n                        twoWay = false;\n                        terminator = ']]';\n                    }\n\n                    endIndex = startIndex < 0 ? -1 : text.indexOf(terminator, startIndex + 2);\n\n                    if (endIndex < 0) {\n                        return;\n                    }\n\n                    boundProperty = boundProperty || {};\n                    var pathString = text.slice(startIndex + 2, endIndex).trim();\n                    var attributeName = pathString;\n\n                    /*   if (twoWay) {\r\n                           const updateToken = function (value) {\r\n                               boundProperty.value = value;\r\n                                    if (node.$ && node.$.isNativeElement) {\r\n                                        if (!BindingModule.cache['toDash' + name]) {\r\n                                       BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\r\n                                   }\r\n                                        const attributeName = BindingModule.cache['toDash' + name];\r\n                                   const oldValue = node.$.getAttributeValue(attributeName, boundProperty.type);\r\n                                        if (oldValue !== boundProperty.value) {\r\n                                       node.$.setAttributeValue(attributeName, boundProperty.value, boundProperty.type);\r\n                                   }\r\n                               }\r\n                           }\r\n                                if (pathString.indexOf('::') >= 0) {\r\n                               const eventIndex = pathString.indexOf('::');\r\n                               const eventName = pathString.substring(eventIndex + 2);\r\n                                    that.ownerElement['$' + node.getAttribute('smart-id')].listen(eventName, function () {\r\n                                   updateToken(node[name]);\r\n                                        const boundPropertyName = boundProperty.name.substring(0, boundProperty.name.indexOf('::'));\r\n                                   that.updateBoundProperty(boundPropertyName, boundProperty);\r\n                               });\r\n                           }\r\n                                if (node.$ && node.$.isCustomElement) {\r\n                               if (!BindingModule.cache['toDash' + name]) {\r\n                                   BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\r\n                               }\r\n                                    const attributeName = BindingModule.cache['toDash' + name];\r\n                               const propertyName = Utilities.Core.toCamelCase(attributeName);\r\n                               \r\n                               if (node._properties && node._properties[propertyName]) {\r\n                                   node._properties[propertyName].notify = true;\r\n                               }\r\n                                    that.ownerElement['$' + node.getAttribute('smart-id')].listen(attributeName + '-changed', function (event) {\r\n                                   const detail = event.detail;\r\n                                        updateToken(detail.value);\r\n                                        const context = that.ownerElement.context;\r\n                                   \r\n                                   if (event.context !== document) {\r\n                                       that.ownerElement.context = that.ownerElement;\r\n                                   }\r\n                                        that.updateBoundProperty(name, boundProperty);\r\n                                        that.ownerElement.context = context;\r\n                               });\r\n                           }\r\n                       }*/\n\n                    boundProperty.name = attributeName;\n                    lastIndex = endIndex + 2;\n                }\n\n                var propertyName = boundProperty.name;\n                var elementProperty = that.ownerElement._properties[propertyName];\n\n                boundProperty.twoWay = twoWay;\n                boundProperty.ready = false;\n                that.ownerElement.boundProperties[propertyName] = true;\n\n                if (elementProperty) {\n                    boundProperty.type = elementProperty.type;\n                    boundProperty.reflectToAttribute = elementProperty.reflectToAttribute;\n                } else {\n                    boundProperty.type = 'string';\n                    boundProperty.reflectToAttribute = true;\n                }\n\n                return boundProperty;\n            }\n\n            /**\r\n             * Updates element's data bound nodes.\r\n             */\n\n        }, {\n            key: 'updateTextNodes',\n            value: function updateTextNodes() {\n                var that = this;\n\n                that.updateTextNode(that.ownerElement.shadowRoot || that.ownerElement, that.ownerElement.bindings, that.ownerElement);\n            }\n\n            /**\r\n             * Updates a data bound node.\r\n             * @param {Node} - The bound node.\r\n             * @param {Array<BindingData>} - The node's binding data.\r\n             * @param {Element} - The element to be updated.\r\n             */\n\n        }, {\n            key: 'updateTextNode',\n            value: function updateTextNode(node, bindings, element) {\n                var that = this;\n\n                if (!bindings) {\n                    return;\n                }\n\n                var index = 0;\n                for (var child = node.firstChild; child; child = child.nextSibling) {\n                    if (!bindings.children) {\n                        break;\n                    }\n\n                    that.updateTextNode(child, bindings.children[index++], element);\n                }\n\n                if (!bindings || !bindings.data) {\n                    return;\n                }\n\n                for (var name in bindings.data) {\n                    var boundProperty = bindings.data[name];\n                    var boundPropertyName = boundProperty.name;\n\n                    if (name !== 'textContent' || !boundProperty.twoWay || boundProperty.updating || boundProperty.value === undefined) {\n                        continue;\n                    }\n\n                    element[boundPropertyName] = boundProperty.value;\n                }\n            }\n\n            /**\r\n             * Updates a data bound property.\r\n             * @param {String} - The propery's name.\r\n             * @param {Object} - The property's value.\r\n             */\n\n        }, {\n            key: 'updateBoundProperty',\n            value: function updateBoundProperty(propertyName, propertyConfig) {\n                if (propertyConfig.updating) {\n                    return;\n                }\n\n                var that = this;\n                var element = that.ownerElement;\n\n                propertyConfig.updating = true;\n                element[propertyName] = propertyConfig.value;\n                propertyConfig.updating = false;\n            }\n\n            /**\r\n             * Updates element's data bound nodes.\r\n             */\n\n        }, {\n            key: 'updateBoundNodes',\n            value: function updateBoundNodes(propertyName) {\n                var that = this;\n\n                that.updateBoundNode(that.ownerElement.shadowRoot || that.ownerElement, that.ownerElement.bindings, that.ownerElement, propertyName);\n                if (that.ownerElement.detachedChildren.length > 0) {\n                    var _loop = function _loop(i) {\n                        var node = that.ownerElement.detachedChildren[i];\n                        var smartId = node.getAttribute('smart-id');\n\n                        var getBindings = function getBindings(bindings) {\n                            if (bindings.nodeId === smartId) {\n                                return bindings;\n                            }\n\n                            for (var index in bindings.children) {\n                                var _node = bindings.children[index];\n                                var attribute = _node.getAttribute ? _node.getAttribute('smart-id') : '';\n\n                                if (attribute === smartId) {\n                                    return bindings;\n                                }\n\n                                if (_node.children) {\n                                    var result = getBindings(_node);\n                                    if (result) {\n                                        return result;\n                                    }\n                                }\n                            }\n\n                            return null;\n                        };\n\n                        var bindings = getBindings(that.ownerElement.bindings);\n\n                        if (bindings) {\n                            that.updateBoundNode(node, bindings, that.ownerElement, propertyName, true);\n                        }\n                    };\n\n                    for (var i = 0; i < that.ownerElement.detachedChildren.length; i++) {\n                        _loop(i);\n                    }\n                }\n            }\n\n            /**\r\n             * Updates a data bound node.\r\n             * @param {Node} - The bound node.\r\n             * @param {Array<BindingData>} - The node's binding data.\r\n             * @param {Element} - The element to be updated.\r\n             */\n\n        }, {\n            key: 'updateBoundNode',\n            value: function updateBoundNode(node, bindings, element, propertyName, detached) {\n                var that = this;\n\n                if (!bindings) {\n                    return;\n                }\n\n                var index = 0;\n                if (!detached) {\n                    for (var child = node.firstChild; child; child = child.nextSibling) {\n                        if (!bindings.children) {\n                            break;\n                        }\n                        //       that.updateBoundNode(child, bindings.children[index++], element, propertyName);\n\n                        if (child.getAttribute) {\n                            (function () {\n                                var childId = child.getAttribute('smart-id');\n                                var childBindings = function () {\n                                    for (var binding in bindings.children) {\n                                        if (bindings.children[binding].nodeId === childId) {\n                                            return bindings.children[binding];\n                                        }\n                                    }\n                                }();\n\n                                that.updateBoundNode(child, childBindings, element, propertyName);\n                                index++;\n                            })();\n                        } else {\n                            that.updateBoundNode(child, bindings.children[index++], element, propertyName);\n                        }\n                    }\n                } else if (detached && !bindings.data) {\n                    for (var _child = node.firstChild; _child; _child = _child.nextSibling) {\n                        if (!bindings.children) {\n                            break;\n                        }\n\n                        //   that.updateBoundNode(child, bindings.children[index++], element, propertyName, detached);\n\n                        if (_child.getAttribute) {\n                            (function () {\n                                var childId = _child.getAttribute('smart-id');\n                                var childBindings = function () {\n                                    for (var binding in bindings.children) {\n                                        if (bindings.children[binding].nodeId === childId) {\n                                            return bindings.children[binding];\n                                        }\n                                    }\n                                }();\n\n                                that.updateBoundNode(_child, childBindings, element, propertyName);\n                                index++;\n                            })();\n                        } else {\n                            that.updateBoundNode(_child, bindings.children[index++], element, propertyName, detached);\n                        }\n                    }\n                }\n\n                if (!bindings || !bindings.data) {\n                    return;\n                }\n\n                var _loop2 = function _loop2(name) {\n                    var boundProperty = bindings.data[name];\n                    var boundPropertyName = boundProperty.name;\n                    if (boundProperty.updating) {\n                        return 'continue';\n                    }\n\n                    if (propertyName !== undefined && propertyName !== boundPropertyName) {\n                        return 'continue';\n                    }\n\n                    boundProperty.value = element[boundPropertyName];\n\n                    if (boundPropertyName === 'innerHTML') {\n                        if (node[name].toString().trim() !== element[boundPropertyName].toString().trim()) {\n                            if (boundProperty.ready) {\n                                node[name] = boundProperty.value.toString().trim();\n                            } else if (element._properties[boundPropertyName].defaultValue !== boundProperty.value) {\n                                node[name] = boundProperty.value.toString().trim();\n                            }\n                        }\n                    } else {\n                        node[name] = boundProperty.value;\n                    }\n\n                    if (node.$ && node.$.isNativeElement) {\n                        if (!BindingModule.cache['toDash' + name]) {\n                            BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\n                        }\n\n                        var attributeName = BindingModule.cache['toDash' + name];\n                        var oldValue = node.$.getAttributeValue(attributeName, boundProperty.type);\n                        if (boundProperty.reflectToAttribute && (oldValue !== boundProperty.value || !boundProperty.ready)) {\n                            node.$.setAttributeValue(attributeName, boundProperty.value, boundProperty.type);\n                        }\n                        if (!boundProperty.reflectToAttribute) {\n                            node.$.setAttributeValue(attributeName, null, boundProperty.type);\n                        }\n                    }\n\n                    if (!boundProperty.ready) {\n                        if (node.$ && node.$.isCustomElement) {\n                            if (!BindingModule.cache['toDash' + name]) {\n                                BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\n                            }\n\n                            var _attributeName = BindingModule.cache['toDash' + name];\n\n                            if (!node._properties) {\n                                node._beforeCreatedProperties = node._properties = node.propertyByAttributeName = [];\n                            }\n\n                            if (!node._properties[name]) {\n                                node._properties[name] = {\n                                    attributeName: _attributeName\n                                };\n                                node._beforeCreatedProperties[name] = node._properties[name];\n                                node.propertyByAttributeName[_attributeName] = node._properties[name];\n                            }\n\n                            var propertyConfig = node._properties[name];\n\n                            propertyConfig.isUpdating = true;\n\n                            if (boundProperty.reflectToAttribute) {\n                                node.$.setAttributeValue(propertyConfig.attributeName, boundProperty.value, boundProperty.type);\n                            }\n\n                            if (!boundProperty.reflectToAttribute) {\n                                node.$.setAttributeValue(propertyConfig.attributeName, null, boundProperty.type);\n                            }\n\n                            propertyConfig.isUpdating = false;\n                        }\n\n                        if (boundProperty.twoWay) {\n                            var updateToken = function updateToken(value) {\n                                boundProperty.value = value;\n\n                                if (node.$ && node.$.isNativeElement) {\n                                    if (!BindingModule.cache['toDash' + name]) {\n                                        BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\n                                    }\n\n                                    var _attributeName2 = BindingModule.cache['toDash' + name];\n                                    var _oldValue = node.$.getAttributeValue(_attributeName2, boundProperty.type);\n\n                                    if (boundProperty.reflectToAttribute && _oldValue !== boundProperty.value) {\n                                        node.$.setAttributeValue(_attributeName2, boundProperty.value, boundProperty.type);\n                                    }\n                                    if (!boundProperty.reflectToAttribute) {\n                                        node.$.setAttributeValue(_attributeName2, null, boundProperty.type);\n                                    }\n                                }\n                            };\n\n                            if (boundProperty.name.indexOf('::') >= 0) {\n                                var eventIndex = boundProperty.name.indexOf('::');\n                                var eventName = boundProperty.name.substring(eventIndex + 2);\n\n                                that.ownerElement['$' + node.getAttribute('smart-id')].listen(eventName, function () {\n                                    updateToken(node[name]);\n                                    that.updateBoundProperty(name, boundProperty);\n                                });\n                            }\n\n                            if (node.$ && node.$.isCustomElement) {\n                                if (node._properties[name]) {\n                                    node._properties[name].notify = true;\n                                }\n\n                                if (!BindingModule.cache['toDash' + name]) {\n                                    BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\n                                }\n\n                                var _attributeName3 = BindingModule.cache['toDash' + name];\n\n                                that.ownerElement['$' + node.getAttribute('smart-id')].listen(_attributeName3 + '-changed', function (event) {\n                                    var detail = event.detail;\n                                    updateToken(detail.value);\n\n                                    var context = that.ownerElement.context;\n\n                                    if (event.context !== document) {\n                                        that.ownerElement.context = that.ownerElement;\n                                    }\n\n                                    that.updateBoundProperty(name, boundProperty);\n\n                                    that.ownerElement.context = context;\n                                });\n                            }\n                        }\n                    }\n\n                    boundProperty.ready = true;\n                };\n\n                for (var name in bindings.data) {\n                    var _ret4 = _loop2(name);\n\n                    if (_ret4 === 'continue') continue;\n                }\n            }\n        }], [{\n            key: 'clearCache',\n            value: function clearCache() {\n                var that = this;\n\n                that.cache = {};\n            }\n        }, {\n            key: 'moduleName',\n            get: function get() {\n                return 'BindingModule';\n            }\n        }]);\n        return BindingModule;\n    }();\n\n    /** This is a class with utility methods for determing the type of a value. */\n\n\n    var Types = function () {\n        function Types() {\n            babelHelpers.classCallCheck(this, Types);\n        }\n\n        babelHelpers.createClass(Types, null, [{\n            key: 'isBoolean',\n\n            /**\r\n             * Determines whether a value is Boolean. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n            value: function isBoolean(value) {\n                return typeof value === 'boolean';\n            }\n\n            /**\r\n             * Determines whether a value is Function. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isFunction',\n            value: function isFunction(value) {\n                return !!(value && value.constructor && value.call && value.apply);\n            }\n\n            /**\r\n             * Determines whether a value is Array. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isArray',\n            value: function isArray(value) {\n                return Array.isArray(value);\n            }\n\n            /**\r\n             * Determines whether a value is Object. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isObject',\n            value: function isObject(value) {\n                var that = this;\n\n                return value && ((typeof value === 'undefined' ? 'undefined' : babelHelpers.typeof(value)) === 'object' || that.isFunction(value)) || false;\n            }\n\n            /**\r\n             * Determines whether a value is Date. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isDate',\n            value: function isDate(value) {\n                return value instanceof Date;\n            }\n\n            /**\r\n             * Determines whether a value is String. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isString',\n            value: function isString(value) {\n                return typeof value === 'string';\n            }\n\n            /**\r\n             * Determines whether a value is Number. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isNumber',\n            value: function isNumber(value) {\n                return typeof value === 'number';\n            }\n\n            /**\r\n             * Determines the type of an object.\r\n             * @param {Object}.\r\n             * @return {String} The value's type or undefined, if the type is unknown.\r\n             */\n\n        }, {\n            key: 'getType',\n            value: function getType(value) {\n                var that = this;\n\n                var types = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'Object'];\n                var type = types.find(function (type) {\n                    if (that['is' + type](value)) {\n                        return type;\n                    }\n                });\n\n                return type ? type.toLowerCase() : undefined;\n            }\n        }]);\n        return Types;\n    }();\n\n    var Ripple = function () {\n        function Ripple() {\n            babelHelpers.classCallCheck(this, Ripple);\n        }\n\n        babelHelpers.createClass(Ripple, null, [{\n            key: 'animate',\n            value: function animate(element, left, top) {\n                var target = element;\n\n                if (target.getElementsByClassName('ripple').length === 0) {\n                    var span = document.createElement('span');\n\n                    span.classList.add('ripple');\n\n                    if (target.firstElementChild && !target.firstElementChild.noRipple && target.firstElementChild.offsetHeight > 0) {\n                        target.firstElementChild.appendChild(span);\n                    } else {\n                        target.appendChild(span);\n                    }\n                }\n\n                var ripple = target.getElementsByClassName('ripple')[0];\n\n                ripple.innerHTML = '';\n                ripple.classList.remove('animate');\n                ripple.style.height = ripple.style.width = Math.max(target.offsetHeight, target.offsetWidth) + 'px';\n\n                var rect = target.getBoundingClientRect(),\n                    x = left - (rect.left + window.pageXOffset) - ripple.offsetWidth / 2,\n                    y = top - (rect.top + window.pageYOffset) - ripple.offsetHeight / 2;\n\n                ripple.style.left = x + 'px';\n                ripple.style.top = y + 'px';\n                ripple.classList.add('animate');\n\n                //Remove the ripple element when animation is over\n                ripple.addEventListener('animationend', function handler() {\n                    if (ripple.parentElement) {\n                        ripple.parentElement.removeChild(ripple);\n                    }\n\n                    ripple.removeEventListener('animationend', handler);\n                    ripple.removeEventListener('animationcancel', handler);\n                });\n\n                //Remove the ripple element if the animation is canceled. Just in case\n                ripple.addEventListener('animationcancel', function handler() {\n                    if (ripple.parentElement) {\n                        ripple.parentElement.removeChild(ripple);\n                    }\n\n                    ripple.removeEventListener('animationcancel', handler);\n                    ripple.removeEventListener('animationend', handler);\n                });\n            }\n        }]);\n        return Ripple;\n    }();\n\n    var Easings = function () {\n        function Easings() {\n            babelHelpers.classCallCheck(this, Easings);\n        }\n\n        babelHelpers.createClass(Easings, null, [{\n            key: 'easeInQuad',\n            value: function easeInQuad(t, b, c, d) {\n                return c * (t /= d) * t + b;\n            }\n        }, {\n            key: 'easeOutQuad',\n            value: function easeOutQuad(t, b, c, d) {\n                return -c * (t /= d) * (t - 2) + b;\n            }\n        }, {\n            key: 'easeInOutQuad',\n            value: function easeInOutQuad(t, b, c, d) {\n                if ((t /= d / 2) < 1) {\n                    return c / 2 * t * t + b;\n                }\n                return -c / 2 * (--t * (t - 2) - 1) + b;\n            }\n        }, {\n            key: 'easeInCubic',\n            value: function easeInCubic(t, b, c, d) {\n                return c * (t /= d) * t * t + b;\n            }\n        }, {\n            key: 'easeOutCubic',\n            value: function easeOutCubic(t, b, c, d) {\n                return c * ((t = t / d - 1) * t * t + 1) + b;\n            }\n        }, {\n            key: 'easeInOutCubic',\n            value: function easeInOutCubic(t, b, c, d) {\n                if ((t /= d / 2) < 1) {\n                    return c / 2 * t * t * t + b;\n                }\n\n                return c / 2 * ((t -= 2) * t * t + 2) + b;\n            }\n        }, {\n            key: 'easeInQuart',\n            value: function easeInQuart(t, b, c, d) {\n                return c * (t /= d) * t * t * t + b;\n            }\n        }, {\n            key: 'easeOutQuart',\n            value: function easeOutQuart(t, b, c, d) {\n                return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n            }\n        }, {\n            key: 'easeInOutQuart',\n            value: function easeInOutQuart(t, b, c, d) {\n                if ((t /= d / 2) < 1) {\n                    return c / 2 * t * t * t * t + b;\n                }\n                return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n            }\n        }, {\n            key: 'easeInQuint',\n            value: function easeInQuint(t, b, c, d) {\n                return c * (t /= d) * t * t * t * t + b;\n            }\n        }, {\n            key: 'easeOutQuint',\n            value: function easeOutQuint(t, b, c, d) {\n                return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n            }\n        }, {\n            key: 'easeInOutQuint',\n            value: function easeInOutQuint(t, b, c, d) {\n                if ((t /= d / 2) < 1) {\n                    return c / 2 * t * t * t * t * t + b;\n                }\n                return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n            }\n        }, {\n            key: 'easeInSine',\n            value: function easeInSine(t, b, c, d) {\n                return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n            }\n        }, {\n            key: 'easeOutSine',\n            value: function easeOutSine(t, b, c, d) {\n                return c * Math.sin(t / d * (Math.PI / 2)) + b;\n            }\n        }, {\n            key: 'easeInOutSine',\n            value: function easeInOutSine(t, b, c, d) {\n                return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n            }\n        }, {\n            key: 'easeInExpo',\n            value: function easeInExpo(t, b, c, d) {\n                return t === 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n            }\n        }, {\n            key: 'easeOutExpo',\n            value: function easeOutExpo(t, b, c, d) {\n                return t === d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n            }\n        }, {\n            key: 'easeInOutExpo',\n            value: function easeInOutExpo(t, b, c, d) {\n                if (t === 0) {\n                    return b;\n                }\n                if (t === d) {\n                    return b + c;\n                }\n                if ((t /= d / 2) < 1) {\n                    return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n                }\n                return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n            }\n        }, {\n            key: 'easeInCirc',\n            value: function easeInCirc(t, b, c, d) {\n                return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n            }\n        }, {\n            key: 'easeOutCirc',\n            value: function easeOutCirc(t, b, c, d) {\n                return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n            }\n        }, {\n            key: 'easeInOutCirc',\n            value: function easeInOutCirc(t, b, c, d) {\n                if ((t /= d / 2) < 1) {\n                    return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n                }\n                return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n            }\n        }, {\n            key: 'easeInElastic',\n            value: function easeInElastic(t, b, c, d) {\n                var s = 1.70158;\n                var p = 0;\n                var a = c;\n\n                if (t === 0) {\n                    return b;\n                }\n\n                if ((t /= d) === 1) {\n                    return b + c;\n                }\n\n                if (!p) {\n                    p = d * .3;\n                }\n\n                if (a < Math.abs(c)) {\n                    a = c;\n                    s = p / 4;\n                } else {\n                    s = p / (2 * Math.PI) * Math.asin(c / a);\n                }\n\n                return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n            }\n        }, {\n            key: 'easeOutElastic',\n            value: function easeOutElastic(t, b, c, d) {\n                var s = 1.70158;\n                var p = 0;\n                var a = c;\n\n                if (t === 0) {\n                    return b;\n                }\n                if ((t /= d) === 1) {\n                    return b + c;\n                }\n                if (!p) {\n                    p = d * .3;\n                }\n                if (a < Math.abs(c)) {\n                    a = c;\n                    s = p / 4;\n                } else {\n                    s = p / (2 * Math.PI) * Math.asin(c / a);\n                }\n\n                return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;\n            }\n        }, {\n            key: 'easeInOutElastic',\n            value: function easeInOutElastic(t, b, c, d) {\n                var s = 1.70158;\n                var p = 0;\n                var a = c;\n\n                if (t === 0) {\n                    return b;\n                }\n                if ((t /= d / 2) === 2) {\n                    return b + c;\n                }\n                if (!p) {\n                    p = d * (.3 * 1.5);\n                }\n                if (a < Math.abs(c)) {\n                    a = c;\n                    s = p / 4;\n                } else {\n                    s = p / (2 * Math.PI) * Math.asin(c / a);\n                }\n                if (t < 1) {\n                    return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n                }\n\n                return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * .5 + c + b;\n            }\n        }, {\n            key: 'easeInBack',\n            value: function easeInBack(t, b, c, d, s) {\n                if (s === undefined) {\n                    s = 1.70158;\n                }\n\n                return c * (t /= d) * t * ((s + 1) * t - s) + b;\n            }\n        }, {\n            key: 'easeOutBack',\n            value: function easeOutBack(t, b, c, d, s) {\n                if (s === undefined) {\n                    s = 1.70158;\n                }\n                return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n            }\n        }, {\n            key: 'easeInOutBack',\n            value: function easeInOutBack(t, b, c, d, s) {\n                if (s === undefined) {\n                    s = 1.70158;\n                }\n                if ((t /= d / 2) < 1) {\n                    return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n                }\n                return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n            }\n        }, {\n            key: 'easeInBounce',\n            value: function easeInBounce(t, b, c, d) {\n                return c - this.easeOutBounce(d - t, 0, c, d) + b;\n            }\n        }, {\n            key: 'easeOutBounce',\n            value: function easeOutBounce(t, b, c, d) {\n                if ((t /= d) < 1 / 2.75) {\n                    return c * (7.5625 * t * t) + b;\n                } else if (t < 2 / 2.75) {\n                    return c * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + b;\n                } else if (t < 2.5 / 2.75) {\n                    return c * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + b;\n                } else {\n                    return c * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + b;\n                }\n            }\n        }, {\n            key: 'easeInOutBounce',\n            value: function easeInOutBounce(t, b, c, d) {\n                if (t < d / 2) {\n                    return this.easeInBounce(t * 2, 0, c, d) * .5 + b;\n                }\n                return this.easeOutBounce(t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n            }\n        }]);\n        return Easings;\n    }();\n\n    /** This is a class with utility methods. */\n\n\n    var Core = function () {\n        function Core() {\n            babelHelpers.classCallCheck(this, Core);\n        }\n\n        babelHelpers.createClass(Core, null, [{\n            key: 'toCamelCase',\n            value: function toCamelCase(value) {\n                return value.replace(/-([a-z])/g, function (g) {\n                    return g[1].toUpperCase();\n                });\n            }\n        }, {\n            key: 'toDash',\n            value: function toDash(value) {\n                return value.split(/(?=[A-Z])/).join('-').toLowerCase();\n            }\n        }, {\n            key: 'escapeHTML',\n            value: function escapeHTML(value) {\n                var entityMap = {\n                    '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', '\\'': '&#39;', '/': '&#x2F;', '`': '&#x60;', '=': '&#x3D;'\n                };\n\n                return String(value).replace(/[&<>\"'`=\\/]/g, function (s) {\n                    return entityMap[s];\n                });\n            }\n        }, {\n            key: 'CSSVariablesSupport',\n            value: function CSSVariablesSupport() {\n                return window.CSS && window.CSS.supports && window.CSS.supports('(--fake-var: 0)');\n            }\n        }, {\n            key: 'assign',\n            value: function assign(target, source) {\n                var _this = this;\n\n                var isObject = function isObject(item) {\n                    return item && (typeof item === 'undefined' ? 'undefined' : babelHelpers.typeof(item)) === 'object' && !Array.isArray(item) && item !== null;\n                };\n\n                var output = Object.assign({}, target);\n                if (isObject(target) && isObject(source)) {\n                    Object.keys(source).forEach(function (key) {\n                        if (isObject(source[key])) {\n                            if (!(key in target)) {\n                                Object.assign(output, babelHelpers.defineProperty({}, key, source[key]));\n                            } else {\n                                output[key] = _this.assign(target[key], source[key]);\n                            }\n                        } else {\n                            Object.assign(output, babelHelpers.defineProperty({}, key, source[key]));\n                        }\n                    });\n                }\n\n                return output;\n            }\n        }, {\n            key: 'html',\n            value: function html(node, htmlString) {\n                var that = this;\n\n                var output = '';\n                var nodes = node.childNodes;\n\n                if (htmlString) {\n                    var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\n\n                    node.innerHTML = htmlString.replace(rxhtmlTag, '<$1></$2>');\n                    return;\n                }\n\n                for (var i = 0, l = nodes.length, child; i < l && (child = nodes[i]); i++) {\n                    var miscElements = ['strong'];\n\n                    if (child instanceof HTMLElement || child.tagName && miscElements.indexOf(child.tagName.toLowerCase()) >= 0) {\n                        var tagName = child.tagName.toLowerCase();\n                        var attrs = child.attributes;\n\n                        var nodeOutput = '<' + tagName;\n\n                        for (var j = 0, attr; attr = attrs[j]; j++) {\n                            nodeOutput += ' ' + attr.name + '=\"' + attr.value.replace(/[&\\u00A0\"]/g, Utilities.Core.escapeHTML) + '\"';\n                        }\n\n                        nodeOutput += '>';\n\n                        var voidElements = ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\n\n                        if (voidElements[tagName]) {\n                            output += nodeOutput;\n                        }\n\n                        output = output + nodeOutput + that.html(child) + '</' + tagName + '>';\n                    } else {\n                        output += child.textContent.replace(/[&\\u00A0<>]/g, Utilities.Core.escapeHTML);\n                    }\n                }\n                return output;\n            }\n        }, {\n            key: 'isMobile',\n            get: function get() {\n                var isMobile = /(iphone|ipod|ipad|android|iemobile|blackberry|bada)/.test(window.navigator.userAgent.toLowerCase());\n\n                return isMobile;\n            }\n        }, {\n            key: 'Browser',\n            get: function get() {\n                var versionSearchString = void 0;\n\n                var browser = function browser() {\n                    var data = [{ string: navigator.userAgent, subString: 'Edge', identity: 'Edge' }, { string: navigator.userAgent, subString: 'MSIE', identity: 'IE' }, { string: navigator.userAgent, subString: 'Trident', identity: 'IE' }, { string: navigator.userAgent, subString: 'Firefox', identity: 'Firefox' }, { string: navigator.userAgent, subString: 'Opera', identity: 'Opera' }, { string: navigator.userAgent, subString: 'OPR', identity: 'Opera' }, { string: navigator.userAgent, subString: 'Chrome', identity: 'Chrome' }, { string: navigator.userAgent, subString: 'Safari', identity: 'Safari' }];\n\n                    for (var i = 0; i < data.length; i++) {\n                        var dataString = data[i].string;\n                        versionSearchString = data[i].subString;\n\n                        if (dataString.indexOf(data[i].subString) !== -1) {\n                            return data[i].identity;\n                        }\n                    }\n\n                    return 'Other';\n                };\n\n                var version = function version(dataString) {\n                    var index = dataString.indexOf(versionSearchString);\n                    if (index === -1) {\n                        return;\n                    }\n\n                    var rv = dataString.indexOf('rv:');\n\n                    if (versionSearchString === 'Trident' && rv !== -1) {\n                        return parseFloat(dataString.substring(rv + 3));\n                    } else {\n                        return parseFloat(dataString.substring(index + versionSearchString.length + 1));\n                    }\n                };\n\n                var result = {};\n\n                result[browser()] = true;\n                result.version = version(navigator.userAgent) || version(navigator.appVersion) || 'Unknown';\n\n                return result;\n            }\n        }]);\n        return Core;\n    }();\n\n    var styleObservedElements = [];\n\n    var StyleObserver = function () {\n        function StyleObserver() {\n            babelHelpers.classCallCheck(this, StyleObserver);\n        }\n\n        babelHelpers.createClass(StyleObserver, null, [{\n            key: 'watch',\n            value: function watch(element) {\n                styleObservedElements.push(element);\n\n                if (StyleObserver.interval) {\n                    clearInterval(StyleObserver.interval);\n                }\n\n                StyleObserver.interval = setInterval(function () {\n                    StyleObserver.observe();\n                }, 100);\n            }\n        }, {\n            key: 'observeElement',\n            value: function observeElement(element) {\n                var that = element;\n\n                var computedStyle = document.defaultView.getComputedStyle(that, null);\n                var canRaiseResize = true;\n                var styleProperties = ['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'borderBottomWidth', 'display', 'visibility', 'font-size', 'font-family', 'font-style', 'font-weight', 'max-height', 'min-height', 'max-width', 'min-width'];\n\n                if (!that._styleInfo) {\n                    that._styleInfo = [];\n\n                    for (var i = 0; i < styleProperties.length; i++) {\n                        var styleProperty = styleProperties[i];\n\n                        that._styleInfo[styleProperty] = computedStyle[styleProperty];\n                    }\n\n                    return;\n                }\n\n                if (!element.isHidden) {\n                    if (computedStyle['display'] !== 'none') {\n                        if (element.offsetWidth === 0 || element.offsetHeight === 0) {\n                            element.isHidden = true;\n                        }\n                    }\n                }\n\n                if (element.isHidden) {\n                    element.visibilityChangedHandler();\n\n                    if (!element.isHidden) {\n                        canRaiseResize = false;\n                    } else {\n                        return;\n                    }\n                }\n\n                var changedStyleProperties = [];\n\n                for (var _i = 0; _i < styleProperties.length; _i++) {\n                    var _styleProperty = styleProperties[_i];\n\n                    if (that._styleInfo[_styleProperty] !== computedStyle[_styleProperty]) {\n                        changedStyleProperties[_styleProperty] = { oldValue: that._styleInfo[_styleProperty], value: computedStyle[_styleProperty] };\n                        changedStyleProperties.length++;\n                    }\n\n                    that._styleInfo[_styleProperty] = computedStyle[_styleProperty];\n                }\n\n                if (changedStyleProperties.length > 0) {\n                    that.$.fireEvent('styleChanged', {\n                        styleProperties: changedStyleProperties\n                    }, {\n                        bubbles: false,\n                        cancelable: true\n                    });\n\n                    if (changedStyleProperties['display'] && canRaiseResize) {\n                        that.$.fireEvent('resize', that, {\n                            bubbles: false,\n                            cancelable: true\n                        });\n                    }\n                }\n            }\n        }, {\n            key: 'observe',\n            value: function observe() {\n                for (var i = 0; i < styleObservedElements.length; i++) {\n                    var that = styleObservedElements[i];\n                    this.observeElement(that);\n                }\n            }\n        }, {\n            key: 'unwatch',\n            value: function unwatch(element) {\n                if (StyleObserver.interval) {\n                    clearInterval(StyleObserver.interval);\n                }\n\n                styleObservedElements.splice(styleObservedElements.indexOf(element), 1);\n\n                if (styleObservedElements.length > 0) {\n                    StyleObserver.interval = setInterval(function () {\n                        StyleObserver.observe();\n                    }, 100);\n                }\n            }\n        }]);\n        return StyleObserver;\n    }();\n\n    var dataContextObservedObjects = [];\n    var dataContextInfo = [];\n\n    var DataContextObserver = function () {\n        function DataContextObserver() {\n            babelHelpers.classCallCheck(this, DataContextObserver);\n        }\n\n        babelHelpers.createClass(DataContextObserver, null, [{\n            key: 'watch',\n            value: function watch(dataContext) {\n                dataContextObservedObjects.push(dataContext);\n\n                if (DataContextObserver.interval) {\n                    clearInterval(DataContextObserver.interval);\n                }\n\n                DataContextObserver.interval = setInterval(function () {\n                    DataContextObserver.observe();\n                }, 100);\n            }\n        }, {\n            key: 'observeContext',\n            value: function observeContext(dataContext) {\n                var changedProperties = [];\n\n                var getDataContextPropertyValue = function getDataContextPropertyValue(propertyName) {\n                    if (propertyName.indexOf('.') >= 0) {\n                        var path = propertyName.split('.');\n                        var dataBoundObject = dataContext[path[0]];\n\n                        for (var i = 1; i < path.length; i++) {\n                            dataBoundObject = dataBoundObject[path[i]];\n                        }\n\n                        return dataBoundObject;\n                    } else {\n                        return dataContext[propertyName];\n                    }\n                };\n\n                if (!dataContext._uid) {\n                    dataContext._uid = (Date.now().toString(36) + Math.random().toString(36).substr(2, 5)).toUpperCase();\n                }\n\n                if (!dataContextInfo[dataContext._uid]) {\n                    dataContextInfo[dataContext._uid] = [];\n\n                    for (var propertyName in dataContext) {\n                        if (dataContext[propertyName].isEvent) {\n                            continue;\n                        }\n\n                        dataContextInfo[dataContext._uid][propertyName] = getDataContextPropertyValue(propertyName);\n                    }\n\n                    return;\n                }\n\n                for (var _propertyName in dataContext) {\n                    if (dataContext[_propertyName].isEvent) {\n                        continue;\n                    }\n\n                    var propertyValue = getDataContextPropertyValue(_propertyName);\n\n                    if (dataContextInfo[dataContext._uid][_propertyName] !== propertyValue) {\n                        var propertyType = babelHelpers.typeof(dataContextInfo[dataContext._uid][_propertyName]);\n\n                        if (propertyType === 'array' || propertyType === 'object') {\n                            if (JSON.stringify(dataContextInfo[dataContext._uid][_propertyName]) !== JSON.stringify(propertyValue)) {\n                                changedProperties[_propertyName] = { oldValue: dataContextInfo[dataContext._uid][_propertyName], value: propertyValue };\n                                changedProperties.length++;\n                            }\n                        } else {\n                            changedProperties[_propertyName] = { oldValue: dataContextInfo[dataContext._uid][_propertyName], value: propertyValue };\n                            changedProperties.length++;\n                        }\n                    }\n\n                    dataContextInfo[dataContext._uid][_propertyName] = propertyValue;\n                }\n\n                if (changedProperties.length > 0) {\n                    $document.fireEvent('dataContextPropertyChanged', {\n                        dataContext: dataContext,\n                        properties: changedProperties\n                    }, {\n                        bubbles: false,\n                        cancelable: true\n                    });\n                }\n            }\n        }, {\n            key: 'observe',\n            value: function observe() {\n                for (var i = 0; i < dataContextObservedObjects.length; i++) {\n                    var that = dataContextObservedObjects[i];\n                    this.observeContext(that);\n                }\n            }\n        }, {\n            key: 'unwatch',\n            value: function unwatch(dataContext) {\n                if (DataContextObserver.interval) {\n                    clearInterval(DataContextObserver.interval);\n                }\n\n                dataContextObservedObjects = dataContextObservedObjects.splice(dataContextObservedObjects.indexOf(dataContext), 1);\n\n                if (dataContextObservedObjects.length > 0) {\n                    DataContextObserver.interval = setInterval(function () {\n                        DataContextObserver.observe();\n                    }, 100);\n                }\n            }\n        }]);\n        return DataContextObserver;\n    }();\n\n    var inputEventTypes = ['resize', 'down', 'up', 'move', 'tap', 'taphold', 'swipeleft', 'swiperight', 'swipetop', 'swipebottom'];\n\n    /** This is a class which extends an element and adds custom input events to it. */\n\n    var InputEvents = function () {\n        function InputEvents(target) {\n            babelHelpers.classCallCheck(this, InputEvents);\n\n            var that = this;\n\n            that.target = target;\n            that.$target = new _Extend(target);\n            that.$document = new _Extend(document);\n            that.id = (Date.now().toString(36) + Math.random().toString(36).substr(2, 5)).toUpperCase();\n            // that.target === document ? '' : that.target.id || that.target.getAttribute('smart-id');\n\n            var result = { handlers: {}, boundEventTypes: [], listen: that.listen.bind(that), unlisten: that.unlisten.bind(that) };\n\n            //The taphold delay. If this delay is passed then taphold event will be fired.\n            that.tapHoldDelay = 750;\n            //Defines the minimum swipe distance required by the plugin.\n            that.swipeMin = 10;\n            //Defines the maximum swipe distance. After it is passed the propagation of the event will be restored, therefore the scrolling will be available.\n            that.swipeMax = 5000;\n            //The swipe delay. After it is passed swipe event won't be fired.\n            that.swipeDelay = 1000;\n            //The taphold delay. If this delay is passed then taphold event will be fired.\n            that.tapHoldDelay = 750;\n\n            that.inputEventProperties = ['clientX', 'clientY', 'pageX', 'pageY', 'screenX', 'screenY'];\n\n            inputEventTypes.forEach(function (eventType) {\n                result[eventType] = function (handler) {\n                    result.handlers[eventType] = handler;\n                };\n\n                that[eventType] = function (event) {\n                    if (!result.handlers[event.type]) {\n                        if ((event.type === 'mousemove' || event.type === 'pointermove' || event.type === 'touchmove') && result.handlers['move']) {\n                            var moveEvent = that.createEvent(event, 'move');\n                            result.handlers['move'](moveEvent);\n                        }\n\n                        return true;\n                    }\n\n                    return result.handlers[event.type](event);\n                };\n            });\n\n            that.listen();\n\n            that.handlers = result.handlers;\n\n            return result;\n        }\n\n        babelHelpers.createClass(InputEvents, [{\n            key: 'listen',\n            value: function listen(eventType) {\n                var that = this;\n\n                if (eventType === 'resize') {\n                    if (!that.target.resizeTrigger && that.target !== document && that.target !== window) {\n                        var container = document.createElement('div');\n                        container.className = 'smart-resize-trigger-container';\n                        container.innerHTML = '<div class=\"smart-resize-trigger-container\">' + '<div class=\"smart-resize-trigger\"></div>' + '</div>' + '<div class=\"smart-resize-trigger-container\">' + '<div class=\"smart-resize-trigger-shrink\"></div>' + '</div>';\n\n                        that.target.appendChild(container);\n                        that.target.resizeTrigger = container;\n\n                        var expand = container.childNodes[0];\n                        var expandChild = expand.childNodes[0];\n                        var shrink = container.childNodes[1];\n                        var reset = function reset() {\n                            expandChild.style.width = '100000px';\n                            expandChild.style.height = '100000px';\n\n                            expand.scrollLeft = 100000;\n                            expand.scrollTop = 100000;\n\n                            shrink.scrollLeft = 100000;\n                            shrink.scrollTop = 100000;\n                        };\n\n                        var dirty = void 0,\n                            requestAnimationFrameId = void 0,\n                            newWidth = void 0,\n                            newHeight = void 0;\n\n                        var lastWidth = that.target.offsetWidth;\n                        var lastHeight = that.target.offsetHeight;\n\n                        reset();\n\n                        that.target.resizeHandler = function () {\n                            if (!requestAnimationFrameId) {\n                                requestAnimationFrameId = requestAnimationFrame(function () {\n                                    requestAnimationFrameId = 0;\n                                    newWidth = that.target.offsetWidth;\n                                    newHeight = that.target.offsetHeight;\n                                    dirty = newWidth !== lastWidth || newHeight !== lastHeight;\n                                    if (that.target.requiresLayout) {\n                                        dirty = true;\n                                    }\n\n                                    if (!dirty) {\n                                        return;\n                                    }\n\n                                    lastWidth = newWidth;\n                                    lastHeight = newHeight;\n\n                                    var resizeEvent = new CustomEvent('resize', {\n                                        bubbles: false,\n                                        cancelable: true\n                                    });\n\n                                    that.resize(resizeEvent);\n\n                                    that.target.requiresLayout = false;\n                                });\n                            }\n\n                            reset();\n                        };\n\n                        expand.addEventListener('scroll', that.target.resizeHandler);\n                        shrink.addEventListener('scroll', that.target.resizeHandler);\n                    }\n                }\n\n                if (that.isListening) {\n                    return;\n                }\n\n                that.isListening = true;\n                that.isPressed = false;\n                that.isReleased = false;\n                that.isInBounds = false;\n\n                if (window.PointerEvent) {\n                    that.$target.listen('pointerdown.inputEvents' + that.id, that.pointerDown.bind(that));\n                    that.$target.listen('pointerup.inputEvents' + that.id, that.pointerUp.bind(that));\n                    that.$target.listen('pointermove.inputEvents' + that.id, that.pointerMove.bind(that));\n                    that.$target.listen('pointercancel.inputEvents' + that.id, that.pointerCancel.bind(that));\n                } else {\n                    var hasTouch = 'ontouchstart' in window;\n\n                    if (hasTouch) {\n                        that.$target.listen('touchmove.inputEvents' + that.id, that.touchMove.bind(that));\n                        that.$target.listen('touchstart.inputEvents' + that.id, that.touchStart.bind(that));\n                        that.$target.listen('touchend.inputEvents' + that.id, that.touchEnd.bind(that));\n                        that.$target.listen('touchcancel.inputEvents' + that.id, that.touchCancel.bind(that));\n                    }\n\n                    that.$target.listen('mousedown.inputEvents' + that.id, that.mouseDown.bind(that));\n                    that.$target.listen('mouseup.inputEvents' + that.id, that.mouseUp.bind(that));\n                    that.$target.listen('mousemove.inputEvents' + that.id, that.mouseMove.bind(that));\n                    that.$target.listen('mouseleave.inputEvents' + that.id, that.mouseLeave.bind(that));\n                }\n\n                that.$document.listen('mouseup.inputEvents' + that.id, that.handleDocumentUp.bind(that));\n            }\n        }, {\n            key: 'unlisten',\n            value: function unlisten(eventType) {\n                var that = this;\n\n                that.isListening = false;\n\n                if (window.PointerEvent) {\n                    that.$target.unlisten('pointerdown.inputEvents' + that.id);\n                    that.$target.unlisten('pointerup.inputEvents' + that.id);\n                    that.$target.unlisten('pointermove.inputEvents' + that.id);\n                    that.$target.unlisten('pointercancel.inputEvents' + that.id);\n                } else {\n                    var hasTouch = 'ontouchstart' in window;\n                    if (hasTouch) {\n                        that.$target.unlisten('touchstart.inputEvents' + that.id);\n                        that.$target.unlisten('touchmove.inputEvents' + that.id);\n                        that.$target.unlisten('touchend.inputEvents' + that.id);\n                        that.$target.unlisten('touchcancel.inputEvents' + that.id);\n                    }\n\n                    that.$target.unlisten('mousedown.inputEvents' + that.id);\n                    that.$target.unlisten('mouseup.inputEvents' + that.id);\n                    that.$target.unlisten('mousemove.inputEvents' + that.id);\n                    that.$target.unlisten('mouseleave.inputEvents' + that.id);\n                }\n\n                that.$document.unlisten('mouseup.inputEvents' + that.id, that.handleDocumentUp);\n\n                if (eventType === 'resize' && that.target.resizeTrigger) {\n                    var container = that.target.resizeTrigger;\n                    var expand = container.childNodes[0];\n                    var shrink = container.childNodes[1];\n\n                    expand.removeEventListener('scroll', that.target.resizeHandler);\n                    shrink.removeEventListener('scroll', that.target.resizeHandler);\n\n                    that.target.resizeHandler = null;\n                    that.target.removeChild(container);\n                    delete that.target.resizeTrigger;\n                }\n            }\n        }, {\n            key: 'handleDocumentUp',\n            value: function handleDocumentUp(event) {\n                var that = this;\n\n                that.isPressed = false;\n                that.isReleased = false;\n                that.resetSwipe(event);\n            }\n        }, {\n            key: 'createEvent',\n            value: function createEvent(event, eventType) {\n                var that = this;\n                var touches = event.touches;\n                var changedTouches = event.changedTouches;\n                var touch = touches && touches.length ? touches[0] : changedTouches && changedTouches.length ? changedTouches[0] : undefined;\n                var customEvent = new CustomEvent(eventType, {\n                    bubbles: true,\n                    cancelable: true\n                });\n                customEvent.originalEvent = event;\n                if (touch) {\n                    for (var j = 0; j < that.inputEventProperties.length; j++) {\n                        var key = that.inputEventProperties[j];\n\n                        customEvent[key] = touch[key];\n                    }\n\n                    return customEvent;\n                }\n\n                for (var _key in event) {\n                    if (!(_key in customEvent)) {\n                        customEvent[_key] = event[_key];\n                    }\n                }\n\n                return customEvent;\n            }\n        }, {\n            key: 'fireTap',\n            value: function fireTap(event) {\n                var that = this;\n\n                clearTimeout(this.tapHoldTimeout);\n                if (!this.tapHoldFired && this.isInBounds) {\n                    var tap = that.createEvent(event, 'tap');\n                    that.tap(tap);\n                }\n            }\n        }, {\n            key: 'initTap',\n            value: function initTap(event) {\n                var that = this;\n\n                that.isInBounds = true;\n                that.tapHoldFired = false;\n                that.tapHoldTimeout = setTimeout(function () {\n                    if (that.isInBounds) {\n                        that.tapHoldFired = true;\n                        var taphold = that.createEvent(event, 'taphold');\n                        that.taphold(taphold);\n                    }\n                }, that.tapHoldDelay);\n            }\n        }, {\n            key: 'pointerDown',\n            value: function pointerDown(event) {\n                var that = this;\n\n                return that.handleDown(event);\n            }\n        }, {\n            key: 'mouseDown',\n            value: function mouseDown(event) {\n                var that = this;\n\n                if (that.isPressed || that.touchStartTime && new Date() - that.touchStartTime < 500) {\n                    return;\n                }\n\n                return that.handleDown(event);\n            }\n        }, {\n            key: 'touchStart',\n            value: function touchStart(event) {\n                var that = this;\n\n                that.touchStartTime = new Date();\n                that.isTouchMoved = true;\n\n                return that.handleDown(event);\n            }\n        }, {\n            key: 'mouseUp',\n            value: function mouseUp(event) {\n                var that = this;\n\n                if (that.isReleased || that.touchEndTime && new Date() - that.touchEndTime < 500) {\n                    return;\n                }\n\n                return that.handleUp(event);\n            }\n        }, {\n            key: 'handleDown',\n            value: function handleDown(event) {\n                var that = this;\n\n                that.isReleased = false;\n                that.isPressed = true;\n\n                var down = that.createEvent(event, 'down');\n\n                if (that.handlers['tap'] || that.handlers['taphold']) {\n                    that.initTap(down);\n                }\n\n                if (that.handlers['swipeleft'] || that.handlers['swiperight'] || that.handlers['swipetop'] || that.handlers['swipebottom']) {\n                    that.initSwipe(down);\n                }\n\n                return that.down(down);\n            }\n        }, {\n            key: 'handleUp',\n            value: function handleUp(event) {\n                var that = this;\n\n                that.isReleased = true;\n                that.isPressed = false;\n\n                var up = that.createEvent(event, 'up');\n                var result = that.up(up);\n\n                if (that.handlers['tap'] || that.handlers['taphold']) {\n                    that.fireTap(up);\n                }\n\n                that.resetSwipe(up);\n\n                return result;\n            }\n        }, {\n            key: 'handleMove',\n            value: function handleMove(event) {\n                var that = this;\n\n                var eventResult = that.move(event);\n\n                if (that.isPressed) {\n                    that._maxSwipeVerticalDistance = Math.max(that._maxSwipeVerticalDistance, Math.abs(that._startY - event.pageY));\n                    that._maxSwipeHorizontalDistance = Math.max(that._maxSwipeHorizontalDistance, Math.abs(that._startX - event.pageX));\n                    eventResult = that.handleSwipeEvents(event);\n                }\n\n                return eventResult;\n            }\n        }, {\n            key: 'touchEnd',\n            value: function touchEnd(event) {\n                var that = this;\n\n                that.touchEndTime = new Date();\n                return that.handleUp(event);\n            }\n        }, {\n            key: 'pointerUp',\n            value: function pointerUp(event) {\n                var that = this;\n\n                return that.handleUp(event);\n            }\n        }, {\n            key: 'pointerCancel',\n            value: function pointerCancel(event) {\n                var that = this;\n\n                that.pointerUp(event);\n            }\n        }, {\n            key: 'touchCancel',\n            value: function touchCancel(event) {\n                var that = this;\n\n                that.touchEnd(event);\n            }\n        }, {\n            key: 'mouseLeave',\n            value: function mouseLeave() {\n                var that = this;\n\n                that.isInBounds = false;\n            }\n        }, {\n            key: 'mouseMove',\n            value: function mouseMove(event) {\n                var that = this;\n\n                if (that.isTouchMoved) {\n                    return;\n                }\n\n                return that.handleMove(event);\n            }\n        }, {\n            key: 'pointerMove',\n            value: function pointerMove(event) {\n                var that = this;\n\n                return that.handleMove(event);\n            }\n        }, {\n            key: 'touchMove',\n            value: function touchMove(event) {\n                var that = this;\n                var touches = event.touches;\n                var changedTouches = event.changedTouches;\n                var touch = touches && touches.length ? touches[0] : changedTouches && changedTouches.length ? changedTouches[0] : undefined;\n\n                for (var j = 0; j < that.inputEventProperties.length; j++) {\n                    var key = that.inputEventProperties[j];\n\n                    if (event[key] === undefined) {\n                        event[key] = touch[key];\n                    }\n                }\n\n                that.isTouchMoved = true;\n\n                return that.handleMove(event);\n            }\n        }, {\n            key: 'handleSwipeEvents',\n            value: function handleSwipeEvents(event) {\n                var that = this;\n\n                var eventResult = true;\n\n                if (that.handlers['swipetop'] || that.handlers['swipebottom']) {\n                    eventResult = this.handleVerticalSwipeEvents(event);\n                }\n\n                if (eventResult === false) {\n                    return eventResult;\n                }\n\n                if (that.handlers['swipeleft'] || that.handlers['swiperight']) {\n                    eventResult = this.handleHorizontalSwipeEvents(event);\n                }\n\n                return eventResult;\n            }\n        }, {\n            key: 'handleVerticalSwipeEvents',\n            value: function handleVerticalSwipeEvents(event) {\n                var current = void 0,\n                    diff = void 0;\n                current = event.pageY;\n                diff = current - this._startY;\n\n                return this.swiped(event, diff, 'vertical');\n            }\n        }, {\n            key: 'handleHorizontalSwipeEvents',\n            value: function handleHorizontalSwipeEvents(event) {\n                var current = void 0,\n                    diff = void 0;\n                current = event.pageX;\n                diff = current - this._startX;\n\n                return this.swiped(event, diff, 'horizontal');\n            }\n        }, {\n            key: 'swiped',\n            value: function swiped(event, diff, direction) {\n                var that = this;\n\n                direction = direction || 0;\n                if (Math.abs(diff) >= that.swipeMin && !that._swipeEvent && !that._swipeLocked) {\n                    var eventType = diff < 0 ? 'swipeleft' : 'swiperight';\n                    if (direction === 'horizontal') {\n                        that._swipeEvent = that.createEvent(event, eventType);\n                    } else {\n                        eventType = diff < 0 ? 'swipetop' : 'swipebottom';\n                        that._swipeEvent = that.createEvent(event, diff < 0 ? 'swipetop' : 'swipebottom');\n                    }\n\n                    if (that[eventType]) {\n                        that[eventType](this._swipeEvent);\n                        if (Math.abs(diff) <= this.swipeMax) {\n                            event.stopImmediatePropagation();\n                            return false;\n                        }\n                    }\n                }\n\n                return true;\n            }\n        }, {\n            key: 'resetSwipe',\n            value: function resetSwipe() {\n                var that = this;\n\n                that._swipeEvent = null;\n                clearTimeout(this._swipeTimeout);\n            }\n        }, {\n            key: 'initSwipe',\n            value: function initSwipe(event) {\n                var that = this;\n\n                that._maxSwipeVerticalDistance = 0;\n                that._maxSwipeHorizontalDistance = 0;\n                that._startX = event.pageX;\n                that._startY = event.pageY;\n                that._swipeLocked = false;\n                that._swipeEvent = null;\n                that._swipeTimeout = setTimeout(function () {\n                    that._swipeLocked = true;\n                }, that.swipeDelay);\n            }\n        }]);\n        return InputEvents;\n    }();\n\n    var Scroll = function () {\n        babelHelpers.createClass(Scroll, [{\n            key: 'scrollWidth',\n            get: function get() {\n                var that = this;\n\n                if (that.horizontalScrollBar) {\n                    return that.horizontalScrollBar.max;\n                }\n\n                return -1;\n            },\n            set: function set(value) {\n                var that = this;\n\n                if (value < 0) {\n                    value = 0;\n                }\n\n                if (that.horizontalScrollBar) {\n                    that.horizontalScrollBar.max = value;\n                }\n            }\n        }, {\n            key: 'scrollHeight',\n            get: function get() {\n                var that = this;\n\n                if (that.verticalScrollBar) {\n                    return that.verticalScrollBar.max;\n                }\n\n                return -1;\n            },\n            set: function set(value) {\n                var that = this;\n\n                if (value < 0) {\n                    value = 0;\n                }\n\n                if (that.verticalScrollBar) {\n                    that.verticalScrollBar.max = value;\n                }\n            }\n        }, {\n            key: 'scrollLeft',\n            get: function get() {\n                var that = this;\n\n                if (that.horizontalScrollBar) {\n                    return that.horizontalScrollBar.value;\n                }\n\n                return -1;\n            },\n            set: function set(value) {\n                var that = this;\n\n                if (value < 0) {\n                    value = 0;\n                }\n\n                if (that.horizontalScrollBar) {\n                    that.horizontalScrollBar.value = value;\n                }\n            }\n        }, {\n            key: 'scrollTop',\n            get: function get() {\n                var that = this;\n\n                if (that.verticalScrollBar) {\n                    return that.verticalScrollBar.value;\n                }\n\n                return -1;\n            },\n            set: function set(value) {\n                var that = this;\n\n                if (value < 0) {\n                    value = 0;\n                }\n\n                if (that.verticalScrollBar) {\n                    that.verticalScrollBar.value = value;\n                }\n            }\n        }, {\n            key: 'vScrollBar',\n            get: function get() {\n                var that = this;\n\n                return that.verticalScrollBar;\n            }\n        }, {\n            key: 'hScrollBar',\n            get: function get() {\n                var that = this;\n\n                return that.horizontalScrollBar;\n            }\n        }]);\n\n        function Scroll(container, horizontalScrollBar, verticalScrollBar) {\n            babelHelpers.classCallCheck(this, Scroll);\n\n            var that = this;\n\n            that.container = container;\n            that.horizontalScrollBar = horizontalScrollBar;\n            that.verticalScrollBar = verticalScrollBar;\n            that.listen();\n        }\n\n        babelHelpers.createClass(Scroll, [{\n            key: 'listen',\n            value: function listen() {\n                var that = this;\n                var isMobile = Core.isMobile;\n                var horizontalScrollBar = that.horizontalScrollBar;\n                var verticalScrollBar = that.verticalScrollBar;\n\n                that.inputEvents = new InputEvents(that.container);\n\n                var dragStarted = void 0,\n                    rafId = void 0,\n                    pointerCaptured = void 0,\n                    timestamp = void 0,\n                    ticker = void 0,\n                    now = void 0,\n                    elapsed = void 0,\n                    timeConstant = 500,\n                    currentScrollInfo = void 0;\n\n                var createScrollInfo = function createScrollInfo(scrollBar) {\n                    return {\n                        amplitude: 0,\n                        delta: 0,\n                        initialValue: 0,\n                        min: 0,\n                        max: scrollBar.max,\n                        previousValue: 0,\n                        pointerPosition: 0,\n                        targetValue: 0,\n                        scrollBar: scrollBar,\n                        value: 0,\n                        velocity: 0\n                    };\n                };\n\n                var hScrollInfo = createScrollInfo(horizontalScrollBar);\n                var vScrollInfo = createScrollInfo(verticalScrollBar);\n\n                var track = function track() {\n                    now = Date.now();\n                    elapsed = now - timestamp;\n                    timestamp = now;\n\n                    var updateScrollInfo = function updateScrollInfo(scrollInfo) {\n                        scrollInfo.delta = scrollInfo.value - scrollInfo.previousValue;\n                        scrollInfo.previousValue = scrollInfo.value;\n                        var velocity = 1000 * scrollInfo.delta / (1 + elapsed);\n                        scrollInfo.velocity = 0.8 * velocity + 0.2 * scrollInfo.velocity;\n                    };\n\n                    updateScrollInfo(vScrollInfo);\n                    updateScrollInfo(hScrollInfo);\n                };\n\n                var scroll = function scroll(value) {\n                    currentScrollInfo.value = value > currentScrollInfo.max ? currentScrollInfo.max : value < currentScrollInfo.min ? currentScrollInfo.min : value;\n                    currentScrollInfo.scrollBar.value = currentScrollInfo.value;\n\n                    return value > currentScrollInfo.max ? 'max' : value < currentScrollInfo.min ? 'min' : 'value';\n                };\n\n                function autoScroll() {\n                    var elapsed = void 0,\n                        delta = void 0;\n                    if (currentScrollInfo.amplitude) {\n                        elapsed = Date.now() - timestamp;\n                        delta = -currentScrollInfo.amplitude * Math.exp(-elapsed / timeConstant);\n                        if (delta > 5 || delta < -5) {\n                            scroll(currentScrollInfo.targetValue + delta);\n                            cancelAnimationFrame(rafId);\n                            rafId = 0;\n                            rafId = requestAnimationFrame(autoScroll);\n                        } else {\n                            scroll(currentScrollInfo.targetValue);\n                        }\n                    }\n                }\n\n                that.inputEvents['down'](function (event) {\n                    if (!isMobile) {\n                        return;\n                    }\n\n                    pointerCaptured = true;\n                    dragStarted = false;\n\n                    var updateScrollInfo = function updateScrollInfo(scrollInfo, pointerPosition) {\n                        scrollInfo.amplitude = 0;\n                        scrollInfo.pointerPosition = pointerPosition;\n                        scrollInfo.previousValue = scrollInfo.value;\n                        scrollInfo.value = scrollInfo.scrollBar.value;\n                        scrollInfo.initialValue = scrollInfo.value;\n                        scrollInfo.max = scrollInfo.scrollBar.max;\n                    };\n\n                    updateScrollInfo(vScrollInfo, event.clientY);\n                    updateScrollInfo(hScrollInfo, event.clientX);\n\n                    timestamp = Date.now();\n                    clearInterval(ticker);\n                    ticker = setInterval(track, timeConstant);\n                });\n\n                that.inputEvents['up'](function () {\n                    if (!pointerCaptured) {\n                        return true;\n                    }\n\n                    clearInterval(ticker);\n\n                    var startScroll = function startScroll(scrollInfo) {\n                        currentScrollInfo = scrollInfo;\n                        scrollInfo.amplitude = 0.8 * scrollInfo.velocity;\n                        scrollInfo.targetValue = Math.round(scrollInfo.value + scrollInfo.amplitude);\n                        timestamp = Date.now();\n                        cancelAnimationFrame(rafId);\n                        rafId = requestAnimationFrame(autoScroll);\n                        scrollInfo.velocity = 0;\n                    };\n\n                    if (vScrollInfo.velocity > 10 || vScrollInfo.velocity < -10) {\n                        startScroll(vScrollInfo);\n                    } else if (hScrollInfo.velocity > 10 || hScrollInfo.velocity < -10) {\n                        startScroll(hScrollInfo);\n                    }\n\n                    pointerCaptured = false;\n                });\n\n                that.inputEvents['move'](function (event) {\n                    if (!pointerCaptured) {\n                        return true;\n                    }\n\n                    if (dragStarted) {\n                        event.originalEvent.preventDefault();\n                        event.originalEvent.stopPropagation();\n                    }\n\n                    hScrollInfo.visible = horizontalScrollBar.offsetHeight > 0;\n                    vScrollInfo.visible = verticalScrollBar.offsetWidth > 0;\n\n                    if (!pointerCaptured || !hScrollInfo.visible && !vScrollInfo.visible) {\n                        return;\n                    }\n\n                    vScrollInfo.ratio = -vScrollInfo.max / vScrollInfo.scrollBar.offsetHeight;\n                    vScrollInfo.delta = (event.clientY - vScrollInfo.pointerPosition) * vScrollInfo.ratio;\n\n                    hScrollInfo.ratio = -hScrollInfo.max / hScrollInfo.scrollBar.offsetWidth;\n                    hScrollInfo.delta = (event.clientX - hScrollInfo.pointerPosition) * hScrollInfo.ratio;\n\n                    var dragged = 'value';\n\n                    var doDrag = function doDrag(scrollInfo, pointerPosition, event) {\n                        if (scrollInfo.delta > 5 || scrollInfo.delta < -5) {\n                            currentScrollInfo = scrollInfo;\n\n                            dragged = scrollInfo.initialValue + scrollInfo.delta > currentScrollInfo.max ? 'max' : scrollInfo.initialValue + scrollInfo.delta < currentScrollInfo.min ? 'min' : 'value';\n\n                            if (dragged === 'min' && scrollInfo.initialValue === 0) {\n                                return true;\n                            }\n\n                            if (dragged === 'max' && scrollInfo.initialValue === scrollInfo.max) {\n                                return true;\n                            }\n\n                            if (!scrollInfo.visible) {\n                                return true;\n                            }\n\n                            scroll(scrollInfo.initialValue + scrollInfo.delta);\n                            track();\n\n                            event.originalEvent.preventDefault();\n                            event.originalEvent.stopPropagation();\n                            dragStarted = true;\n\n                            return false;\n                        }\n\n                        return null;\n                    };\n\n                    var verticalDragResult = doDrag(vScrollInfo, event.clientY, event);\n                    if (verticalDragResult === null) {\n                        var horizontalDragResult = doDrag(hScrollInfo, event.clientX, event);\n                        if (horizontalDragResult !== null) {\n                            return horizontalDragResult;\n                        }\n                    } else {\n                        return verticalDragResult;\n                    }\n                });\n\n                var elapsedScrollTo = void 0;\n                that.scrollTo = function (value, vertically) {\n                    var scrollInfo = vertically === false ? hScrollInfo : vScrollInfo;\n                    var isScrolling = false;\n\n                    if (!timestamp) {\n                        timestamp = Date.now();\n                    }\n\n                    if (!elapsedScrollTo) {\n                        elapsedScrollTo = Date.now();\n                    }\n\n                    if (Math.abs(Date.now() - elapsedScrollTo) > 375) {\n                        timestamp = Date.now();\n                    } else {\n                        isScrolling = true;\n                    }\n\n                    elapsedScrollTo = Date.now();\n\n                    scrollInfo.value = scrollInfo.scrollBar.value;\n                    scrollInfo.delta = value - scrollInfo.value;\n                    scrollInfo.max = scrollInfo.scrollBar.max;\n\n                    if (value <= scrollInfo.min) {\n                        value = scrollInfo.min;\n                    }\n\n                    if (value >= scrollInfo.max) {\n                        value = scrollInfo.max;\n                    }\n\n                    scrollInfo.targetValue = value;\n\n                    var to = value;\n                    var from = scrollInfo.value;\n\n                    scrollInfo.velocity = 100 * scrollInfo.delta / (1 + scrollInfo.max);\n                    scrollInfo.from = from;\n\n                    var scroll = function scroll(value) {\n                        scrollInfo.value = value > scrollInfo.max ? scrollInfo.max : value < scrollInfo.min ? scrollInfo.min : value;\n                        scrollInfo.scrollBar.value = scrollInfo.value;\n\n                        return value > scrollInfo.max ? 'max' : value < scrollInfo.min ? 'min' : 'value';\n                    };\n\n                    var autoScroll = function autoScroll() {\n                        var delta = void 0;\n                        var duration = 375;\n                        var time = Date.now() - elapsedScrollTo;\n                        var elapsed = Math.min(1000, Date.now() - timestamp);\n                        var amplitude = scrollInfo.velocity * Math.exp(elapsed / duration);\n\n                        if (isScrolling) {\n                            if (amplitude < 0 && scrollInfo.value <= value) {\n                                amplitude = 0;\n                            } else if (amplitude > 0 && scrollInfo.value >= value) {\n                                amplitude = 0;\n                            }\n                            if (scrollInfo.value + amplitude <= scrollInfo.min || scrollInfo.value + amplitude >= scrollInfo.max) {\n                                amplitude = 0;\n                            }\n\n                            if (amplitude > 0.5 || amplitude < -0.5) {\n                                scroll(scrollInfo.value + amplitude);\n                                cancelAnimationFrame(rafId);\n                                rafId = 0;\n                                rafId = requestAnimationFrame(autoScroll);\n                            } else {\n                                scroll(scrollInfo.targetValue);\n                            }\n                        } else {\n                            if (time >= duration) {\n                                cancelAnimationFrame(rafId);\n                                rafId = 0;\n                                return;\n                            }\n\n                            delta = Utilities.Animation.Easings.easeInSine(time, from, to - from, duration);\n                            scroll(delta);\n                            cancelAnimationFrame(rafId);\n                            rafId = 0;\n                            rafId = requestAnimationFrame(autoScroll);\n                        }\n                    };\n\n                    cancelAnimationFrame(rafId);\n                    rafId = requestAnimationFrame(autoScroll);\n                };\n\n                that.inputEvents.listen();\n            }\n        }, {\n            key: 'unlisten',\n            value: function unlisten() {\n                var that = this;\n\n                if (that.inputEvents) {\n                    that.inputEvents.unlisten();\n                }\n\n                delete that.inputEvents;\n            }\n        }]);\n        return Scroll;\n    }();\n\n    /** This is a class which extends an element with utility methods. */\n\n\n    var _Extend = function () {\n        function Extend(element) {\n            babelHelpers.classCallCheck(this, Extend);\n\n            this.events = {};\n            this.handlers = {};\n            this.element = element;\n        }\n\n        /**\r\n         * Gets whether an element has a CSS Class. \r\n         * @param {String}.\r\n         */\n\n\n        babelHelpers.createClass(Extend, [{\n            key: 'hasClass',\n            value: function hasClass(className) {\n                var that = this;\n                var classNames = className.split(' ');\n\n                for (var i = 0; i < classNames.length; i++) {\n                    var result = that.element.classList.contains(classNames[i]);\n\n                    if (!result) {\n                        return false;\n                    }\n                }\n\n                return true;\n            }\n\n            /**\r\n             * Adds a CSS Class to an element. \r\n             * @param {String}.\r\n             */\n\n        }, {\n            key: 'addClass',\n            value: function addClass(className) {\n                var that = this;\n\n                if (that.hasClass(className)) {\n                    return;\n                }\n\n                var classNames = className.split(' ');\n\n                for (var i = 0; i < classNames.length; i++) {\n                    that.element.classList.add(classNames[i]);\n                }\n\n                if (!that.isNativeElement) {\n                    StyleObserver.observeElement(that.element);\n                }\n            }\n\n            /**\r\n             * Removes a CSS Class from an element. \r\n             * @param {String}.\r\n             */\n\n        }, {\n            key: 'removeClass',\n            value: function removeClass(className) {\n                var that = this;\n\n                if (arguments.length === 0) {\n                    that.element.removeAttribute('class');\n                    return;\n                }\n\n                var classNames = className.split(' ');\n\n                for (var i = 0; i < classNames.length; i++) {\n                    that.element.classList.remove(classNames[i]);\n                }\n\n                if (that.element.className === '') {\n                    that.element.removeAttribute('class');\n                }\n                if (!that.isNativeElement) {\n                    StyleObserver.observeElement(that.element);\n                }\n            }\n        }, {\n            key: 'dispatch',\n\n\n            /** \r\n             * Applies the event handlers.\r\n             * @param {Event} - event object.\r\n             */\n            value: function dispatch(event) {\n                var that = this;\n                var handleObjects = that.events[event.type];\n\n                for (var i = 0; i < handleObjects.length; i++) {\n                    var handleObject = handleObjects[i];\n                    event.namespace = handleObject.namespace;\n                    event.context = handleObject.context;\n\n                    if (event.defaultPrevented) {\n                        break;\n                    }\n\n                    var result = handleObject.handler.apply(that.element, [event]);\n\n                    if (result !== undefined) {\n                        event.result = result;\n\n                        if (result === false) {\n                            event.preventDefault();\n                            event.stopPropagation();\n                            break;\n                        }\n                    }\n                }\n\n                return event.result;\n            }\n\n            /** \r\n             * Fires a new event.\r\n             * @param {String} - event type.\r\n             * @param {Object} - event details.\r\n             * @param {Object} - event options.\r\n             */\n\n        }, {\n            key: 'fireEvent',\n            value: function fireEvent(eventType, detail, options) {\n                var that = this;\n\n                if (!options) {\n                    options = {\n                        bubbles: true,\n                        cancelable: true\n                    };\n                }\n                options.detail = detail || {};\n\n                var customEvent = new CustomEvent(eventType, options);\n                customEvent.originalStopPropagation = customEvent.stopPropagation;\n                customEvent.stopPropagation = function () {\n                    customEvent.isPropagationStopped = true;\n                    return customEvent.originalStopPropagation();\n                };\n\n                that.dispatchEvent(customEvent);\n\n                return customEvent;\n            }\n        }, {\n            key: 'dispatchEvent',\n\n            /** \r\n                * Dispatches an event.\r\n                * @param {CustomEvent} - event.\r\n                */\n            value: function dispatchEvent(customEvent) {\n                var that = this;\n                var eventType = customEvent.type;\n                var context = that.element.context;\n\n                that.element.context = document;\n\n                if (that.element['on' + eventType]) {\n                    that.element['on' + eventType](customEvent);\n                } else {\n                    that.element.dispatchEvent(customEvent);\n                }\n\n                that.element.context = context;\n            }\n\n            /** \r\n             * Adds an event listener.\r\n             * @param {String} - event types.\r\n             * @param {Function} - the event handler.\r\n             */\n\n        }, {\n            key: 'listen',\n            value: function listen(types, handler) {\n                var that = this;\n                var typesArray = types.split('.');\n                var namespace = typesArray.slice(1).join('.');\n                var eventType = typesArray[0];\n\n                if (!that.events[eventType]) {\n                    that.events[eventType] = [];\n                }\n\n                var handleObject = {\n                    type: eventType,\n                    handler: handler,\n                    context: that.element,\n                    namespace: namespace\n                };\n\n                if (inputEventTypes.indexOf(eventType) >= 0) {\n                    if (!that.inputEvents) {\n                        that.inputEvents = new InputEvents(that.element);\n                    }\n\n                    that.inputEvents[eventType](function (event) {\n                        that.dispatchEvent(event);\n                    });\n\n                    that.inputEvents.boundEventTypes.push(eventType);\n                    that.inputEvents.listen(eventType);\n                }\n\n                if (that.events[eventType].length === 0) {\n                    that.handlers[eventType] = that.dispatch.bind(that);\n\n                    if (eventType === 'wheel') {\n                        that.element.addEventListener('wheel', that.handlers[eventType], that.isPassiveSupported ? { passive: false } : false);\n                    } else {\n                        that.element.addEventListener(eventType, that.handlers[eventType], false);\n                    }\n                }\n\n                that.events[eventType].push(handleObject);\n            }\n\n            /** \r\n             * Removes an event listener.\r\n             * @param {String} - event types.\r\n             */\n\n        }, {\n            key: 'unlisten',\n            value: function unlisten(types) {\n                var that = this;\n                var typesArray = types.split('.');\n                var namespace = typesArray.slice(1).join('.');\n                var eventType = typesArray[0];\n\n                var handleObjects = that.events[eventType];\n\n                if (that.inputEvents && that.inputEvents.boundEventTypes.indexOf(eventType) >= 0) {\n                    that.inputEvents.boundEventTypes.splice(that.inputEvents.boundEventTypes.indexOf(eventType), 1);\n                    if (that.inputEvents.boundEventTypes.length === 0) {\n                        that.inputEvents.unlisten(eventType);\n                    }\n                }\n\n                if (!handleObjects) {\n                    return;\n                }\n\n                for (var i = 0; i < handleObjects.length; i++) {\n                    if (namespace !== '') {\n                        var index = handleObjects.findIndex(function (o) {\n                            return o.namespace === namespace;\n                        });\n                        handleObjects.splice(index, 1);\n                        break;\n                    } else {\n                        handleObjects = [];\n                    }\n                }\n                if (handleObjects.length === 0) {\n                    that.element.removeEventListener(eventType, that.handlers[eventType]);\n                    that.events[eventType] = [];\n                    delete that.handlers[eventType];\n                }\n            }\n\n            /** \r\n            * Gets the element's attribute value by using the property's value.\r\n            * @param {String} - attribute's name.\r\n            * @param {String} - property's type.\r\n            * @return {Object} The converted from String attribute value. \r\n            */\n\n        }, {\n            key: 'getAttributeValue',\n            value: function getAttributeValue(attributeName, type) {\n                var that = this;\n                var attributeString = that.element.getAttribute(attributeName);\n\n                if (that.isNativeElement) {\n                    return that.deserialize(attributeString, type);\n                }\n\n                var propertyConfig = that.element.propertyByAttributeName[attributeName];\n                var typedValue = propertyConfig.deserialize === undefined ? that.deserialize(attributeString, type, propertyConfig.nullable) : that.element[propertyConfig.deserialize](attributeString);\n\n                return typedValue;\n            }\n\n            /** \r\n             * Sets the element's attribute using the property's value.\r\n             * @param {String} - attribute's name.\r\n             * @param {Object} - property's value.\r\n             * @param {String} - property's type.\r\n             */\n\n        }, {\n            key: 'setAttributeValue',\n            value: function setAttributeValue(attributeName, value, type) {\n                var that = this;\n                var newAttributeValue = void 0;\n                var nullable = false;\n\n                if (!that.isNativeElement) {\n                    var propertyConfig = that.element.propertyByAttributeName[attributeName];\n\n                    nullable = propertyConfig.nullable;\n\n                    if (propertyConfig.serialize) {\n                        newAttributeValue = that.element[propertyConfig.serialize](value);\n                    } else {\n                        newAttributeValue = that.serialize(value, type, nullable);\n                    }\n                } else {\n                    newAttributeValue = that.serialize(value, type);\n                    if (type === 'boolean') {\n                        var booleans = ['checked', 'selected', 'async', 'autofocus', 'autoplay', 'controls', 'defer', 'disabled', 'hidden', 'ismap', 'loop', 'multiple', 'open', 'readonly', 'required', 'scoped'];\n                        if (booleans.indexOf(attributeName) >= 0) {\n                            if (!value) {\n                                that.element.removeAttribute(attributeName);\n                            } else {\n                                that.element.setAttribute(attributeName, '');\n                            }\n                            return;\n                        }\n                    }\n                }\n\n                if (type === 'array' || type === 'object') {\n                    if (newAttributeValue === '[]' || newAttributeValue === '{}') {\n                        that.element.removeAttribute(attributeName);\n                        return;\n                    }\n                }\n\n                if (newAttributeValue === undefined) {\n                    that.element.removeAttribute(attributeName);\n                } else {\n                    that.element.setAttribute(attributeName, newAttributeValue);\n                }\n            }\n\n            /** \r\n             * Converts a javascript value to string.\r\n             * @param {Object} the value to be converted.\r\n             * @return {String} The converted to String value. If the type is unknown, returns undefined.\r\n             */\n\n        }, {\n            key: 'serialize',\n            value: function serialize(value, type, nullable) {\n                if (type === undefined) {\n                    type = Utilities.Types.getType(value);\n                }\n\n                if (value === undefined || !nullable && value === null) {\n                    return undefined;\n                }\n\n                if (nullable && value === null) {\n                    return 'null';\n                }\n\n                if (type === 'string') {\n                    return Utilities.Core.escapeHTML(value);\n                }\n\n                if (type === 'boolean' || type === 'bool') {\n                    if (value === true || value === 'true' || value === 1 || value === '1') {\n                        return '';\n                    } else if (value === false || value === 'false' || value === 0 || value === '0') {\n                        return undefined;\n                    }\n                }\n\n                if (type === 'array') {\n                    return JSON.stringify(value);\n                }\n\n                var types = ['string', 'number', 'int', 'integer', 'float', 'date', 'any', 'function'];\n                if (types.indexOf(type) >= 0) {\n                    return value.toString();\n                }\n\n                if (type === 'object') {\n                    return JSON.stringify(value);\n                }\n\n                return undefined;\n            }\n\n            /** \r\n             * Converts a string to a Javascript value.\r\n             * @param {String}\r\n             * @param {String}\r\n             * @return {Object} The converted String value.\r\n             */\n\n        }, {\n            key: 'deserialize',\n            value: function deserialize(stringValue, type, nullable) {\n                var nullValue = stringValue === 'null';\n\n                if (stringValue === undefined || nullValue && !nullable) {\n                    return undefined;\n                }\n\n                if (nullValue && nullable) {\n                    return null;\n                }\n\n                if (type === 'boolean' || type === 'bool') {\n                    if (stringValue === null) {\n                        return false;\n                    }\n\n                    // Boolean properties are set based on the presence of the attribute: if the attribute exists at all, the value is true.\n                    return true;\n                } else if (type === 'number' || type === 'float') {\n                    if (stringValue === 'NaN') {\n                        return NaN;\n                    }\n\n                    if (stringValue === 'Infinity') {\n                        return Infinity;\n                    }\n\n                    if (stringValue === '-Infinity') {\n                        return -Infinity;\n                    }\n\n                    return parseFloat(stringValue);\n                } else if (type === 'int' || type === 'integer') {\n                    if (stringValue === 'NaN') {\n                        return NaN;\n                    }\n\n                    if (stringValue === 'Infinity') {\n                        return Infinity;\n                    }\n\n                    if (stringValue === '-Infinity') {\n                        return -Infinity;\n                    }\n\n                    return parseInt(stringValue);\n                } else if (type === 'string' || type === 'any') {\n                    return stringValue;\n                } else if (type === 'date') {\n                    return new Date(stringValue);\n                } else if (type === 'function') {\n                    if (typeof window[stringValue] === 'function') {\n                        return window[stringValue];\n                    }\n                } else if (type === 'array' || type === 'object') {\n                    try {\n                        var jsonObject = JSON.parse(stringValue);\n\n                        if (jsonObject) {\n                            return jsonObject;\n                        }\n                    } catch (er) {\n                        if (window[stringValue] && babelHelpers.typeof(window[stringValue]) === 'object') {\n                            return window[stringValue];\n                        }\n                    }\n                }\n\n                return undefined;\n            }\n        }, {\n            key: 'isCustomElement',\n            get: function get() {\n                var that = this;\n\n                if (that.element instanceof window.Smart.BaseElement === true) {\n                    return true;\n                }\n\n                if (document.createElement(that.element.nodeName) instanceof window.Smart.BaseElement === true) {\n                    return true;\n                }\n\n                return false;\n            }\n\n            /** Determines whether this element is native HTMLElement. */\n\n        }, {\n            key: 'isNativeElement',\n            get: function get() {\n                var that = this;\n\n                if (!that.isCustomElement) {\n                    return true;\n                }\n\n                return false;\n            }\n        }, {\n            key: 'isPassiveSupported',\n            get: function get() {\n                // Test via a getter in the options object to see if the passive property is accessed\n                var that = this;\n\n                if (that.supportsPassive !== undefined) {\n                    return that.supportsPassive;\n                }\n\n                that.supportsPassive = false;\n                try {\n                    var opts = Object.defineProperty({}, 'passive', {\n                        get: function get() {\n                            that.supportsPassive = true;\n                        }\n                    });\n                    window.addEventListener('testPassive', null, opts);\n                    window.removeEventListener('testPassive', null, opts);\n                } catch (e) {\n                    //\n                }\n\n                return that.supportsPassive;\n            }\n        }]);\n        return Extend;\n    }();\n\n    /** Animation class. */\n\n\n    var Animation = function () {\n        function Animation() {\n            babelHelpers.classCallCheck(this, Animation);\n        }\n\n        babelHelpers.createClass(Animation, null, [{\n            key: 'Ripple',\n\n\n            /** Get access to Ripple class. */\n            get: function get() {\n                return Ripple;\n            }\n\n            /** Get access to Easings class. */\n\n        }, {\n            key: 'Easings',\n            get: function get() {\n                return Easings;\n            }\n        }]);\n        return Animation;\n    }();\n\n    /** Utilities class. */\n\n\n    var Utilities = function () {\n        function Utilities() {\n            babelHelpers.classCallCheck(this, Utilities);\n        }\n\n        babelHelpers.createClass(Utilities, null, [{\n            key: 'Extend',\n\n\n            /**\r\n             * Extends Element with useful methods.\r\n             * @param {HTMLElement}\r\n             */\n            value: function Extend(element) {\n                return new _Extend(element);\n            }\n        }, {\n            key: 'Assign',\n            value: function Assign(moduleName, module) {\n                Utilities[moduleName] = module;\n            }\n        }, {\n            key: 'Types',\n\n\n            /** Get access to Types class. */\n            get: function get() {\n                return Types;\n            }\n        }, {\n            key: 'Core',\n            get: function get() {\n                return Core;\n            }\n        }, {\n            key: 'Animation',\n            get: function get() {\n                return Animation;\n            }\n        }, {\n            key: 'Scroll',\n            get: function get() {\n                return Scroll;\n            }\n        }, {\n            key: 'InputEvents',\n            get: function get() {\n                return InputEvents;\n            }\n        }]);\n        return Utilities;\n    }();\n\n    var $document = Utilities.Extend(document);\n\n    BindingModule.cache = {};\n    /**\r\n     * This is a base class for Smart Elements. It extends HTMLElement.\r\n     */\n\n    var BaseElement = function (_HTMLElement) {\n        babelHelpers.inherits(BaseElement, _HTMLElement);\n\n        function BaseElement() {\n            babelHelpers.classCallCheck(this, BaseElement);\n            return babelHelpers.possibleConstructorReturn(this, (BaseElement.__proto__ || Object.getPrototypeOf(BaseElement)).apply(this, arguments));\n        }\n\n        babelHelpers.createClass(BaseElement, [{\n            key: 'template',\n\n\n            /**\r\n             * Gets the element's HTML Template.\r\n             *\r\n             * @returns {String} - element's template.\r\n             */\n            value: function template() {\n                return '<div></div>';\n            }\n\n            /** Called when the element is registered. */\n\n        }, {\n            key: 'registered',\n            value: function registered() {\n                var that = this;\n\n                if (that.onRegistered) {\n                    that.onRegistered();\n                }\n            }\n\n            /** Called when the element has been created. */\n\n        }, {\n            key: 'created',\n            value: function created() {\n                var that = this;\n\n                that.isReady = false;\n                that._initElement(that);\n                that._setModuleState('created');\n\n                if (that.onCreated) {\n                    that.onCreated();\n                }\n            }\n\n            /** Called when the element is rendered and configured. Use for one-time post configuration of your element. */\n\n        }, {\n            key: 'completed',\n            value: function completed() {\n                var that = this;\n\n                that.isCompleted = true;\n\n                if (that._onCompleted) {\n                    that._onCompleted();\n                }\n\n                if (that.onCompleted) {\n                    that.onCompleted();\n                }\n            }\n        }, {\n            key: 'whenReady',\n            value: function whenReady(callback) {\n                var that = this;\n\n                if (that.isCompleted) {\n                    callback();\n                    return;\n                }\n\n                if (!that.whenReadyCallbacks) {\n                    that.whenReadyCallbacks = [];\n                }\n\n                that.whenReadyCallbacks.push(callback);\n            }\n\n            /** Called when the element is ready. Use for one-time configuration of your element. */\n\n        }, {\n            key: 'ready',\n            value: function ready() {\n                var _this3 = this;\n\n                var that = this;\n\n                var requires = function requires() {\n                    var missingModules = [];\n\n                    var requires = that.getStaticMember('requires');\n\n                    for (var require in requires) {\n                        var modules = require.split('.');\n\n                        if (modules.length > 2) {\n                            if (!window.Smart.Utilities[modules[2]]) {\n                                missingModules.push(requires[require]);\n                            }\n                        } else if (!window.Smart[modules[1]]) {\n                            missingModules.push(requires[require]);\n                        }\n                    }\n\n                    if (missingModules.length > 0) {\n                        var _that = _this3;\n\n                        _that.error(_that.localize('missingReference', { elementType: _that.nodeName.toLowerCase(), files: missingModules.join(', ') }));\n                    }\n                };\n\n                requires();\n\n                if (that.dataContext) {\n                    that.dataContextProperties = that.parseAttributes(that);\n                    that.dataContextListeners = {};\n                    that.applyDataContext();\n                }\n\n                if (that.onReady) {\n                    that.onReady();\n                }\n            }\n        }, {\n            key: 'applyDataContext',\n            value: function applyDataContext() {\n                var that = this;\n                var dataContext = typeof that.dataContext === 'string' ? window[that.dataContext] || document[that.dataContext] : that.dataContext;\n\n                if (!dataContext || !that.dataContextProperties) {\n                    that.dataContextProperties = null;\n                    return;\n                }\n\n                that.updatingDataContext = true;\n\n                for (var _boundProperty in that.dataContextProperties) {\n                    var binding = that.dataContextProperties[_boundProperty];\n                    var name = binding.name;\n\n                    binding.propertyName = _boundProperty;\n\n                    if (!BindingModule.cache['toDash' + _boundProperty]) {\n                        BindingModule.cache['toDash' + _boundProperty] = Utilities.Core.toDash(name);\n                    }\n\n                    if (binding.isEvent) {\n                        (function () {\n                            var handlerName = binding.value;\n                            if (that.dataContextListeners[name]) {\n                                that.removeEventListener(name, that.dataContextListeners[name]);\n                            }\n\n                            that.dataContextListeners[name] = function (event) {\n                                dataContext[handlerName](event);\n                            };\n                            that.addEventListener(name, that.dataContextListeners[name]);\n                        })();\n                    }\n\n                    if (name.indexOf('.') >= 0) {\n                        var path = name.split('.');\n                        var dataBoundObject = dataContext[path[0]];\n\n                        for (var i = 1; i < path.length; i++) {\n                            dataBoundObject = dataBoundObject[path[i]];\n                        }\n\n                        if (dataBoundObject !== undefined) {\n                            that[_boundProperty] = dataBoundObject;\n                        }\n                    } else {\n                        that[_boundProperty] = dataContext[name];\n                    }\n                }\n\n                that.dataContextPropertyChangedHandler = function (event) {\n                    var properties = event.detail.properties;\n                    var dataContext = event.detail.dataContext;\n                    var elementDataContext = typeof that.dataContext === 'string' ? window[that.dataContext] || document[that.dataContext] : that.dataContext;\n\n                    if (dataContext === elementDataContext) {\n                        for (var property in properties) {\n                            that[property] = properties[property].value;\n                        }\n                    }\n                };\n\n                $document.listen('dataContextPropertyChanged', that.dataContextPropertyChangedHandler);\n\n                that.updatingDataContext = false;\n\n                DataContextObserver.watch(dataContext);\n            }\n        }, {\n            key: 'updateDataContextProperty',\n            value: function updateDataContextProperty(propertyName) {\n                var that = this;\n                var dataContext = typeof that.dataContext === 'string' ? window[that.dataContext] || document[that.dataContext] : that.dataContext;\n                var boundProperty = that.dataContextProperties[propertyName];\n\n                if (that.updatingDataContext) {\n                    return;\n                }\n\n                if (boundProperty.twoWay) {\n                    var name = boundProperty.name;\n\n                    if (name.indexOf('.') >= 0) {\n                        var path = name.split('.');\n                        var dataBoundObject = dataContext[path[0]];\n\n                        for (var i = 1; i < path.length; i++) {\n                            dataBoundObject = dataBoundObject[path[i]];\n                        }\n\n                        if (dataBoundObject !== undefined) {\n                            dataBoundObject = that[propertyName];\n\n                            if (dataContextInfo[dataContext._uid]) {\n                                dataContextInfo[dataContext._uid][propertyName] = dataBoundObject;\n                            }\n                        }\n                    } else {\n                        dataContext[name] = that[propertyName];\n\n                        if (dataContextInfo[dataContext._uid]) {\n                            dataContextInfo[dataContext._uid][propertyName] = dataContext[name];\n                        }\n                    }\n                }\n            }\n        }, {\n            key: 'setup',\n            value: function setup() {\n                var that = this;\n\n                that.context = this;\n\n                if (that.isReady && !that.isCompleted) {\n                    return;\n                }\n\n                if (that.isReady) {\n                    that._setModuleState('attached');\n                    that.isAttached = true;\n                    that.attached();\n                    that._handleListeners('listen');\n                    that.context = document;\n                    return;\n                }\n\n                if (that.ownerElement && that.ownerElement.detachedChildren.indexOf(that) >= 0) {\n                    that.ownerElement.detachedChildren.splice(that.ownerElement.detachedChildren.indexOf(that), 1);\n                }\n\n                that.isReady = true;\n\n                var isMobile = Core.isMobile;\n\n                if (isMobile) {\n                    that.classList.add('smart-mobile');\n                }\n                /* Updates the properties by using the attribute values. */\n\n                for (var i = 0; i < that.attributes.length; i += 1) {\n                    var property = that.propertyByAttributeName[that.attributes[i].name];\n\n                    if (!property) {\n                        continue;\n                    }\n\n                    var attributeValue = that.$.getAttributeValue(property.attributeName, property.type);\n                    var attributeValueString = attributeValue ? attributeValue.toString() : '';\n\n                    if (attributeValueString.indexOf('{{') >= 0 || attributeValueString.indexOf('[[') >= 0) {\n                        continue;\n                    }\n\n                    if (property.type !== 'object' && property.type !== 'array') {\n                        if (that.attributes[i].value.indexOf('{{') >= 0 || that.attributes[i].value.indexOf('[[') >= 0) {\n                            continue;\n                        }\n                    }\n\n                    if (attributeValue !== undefined && property.value !== attributeValue) {\n                        var attributeValueType = Utilities.Types.getType(attributeValue);\n                        var attributeUntypedValue = that.attributes[i].value;\n\n                        if (property.type === 'any' || property.type === 'object') {\n                            if ('' + that[property.name] === attributeValue) {\n                                continue;\n                            }\n                        }\n\n                        if (property.type === 'array') {\n                            if (that[property.name] && JSON.stringify(that[property.name]) === attributeValue) {\n                                continue;\n                            }\n                        }\n\n                        if (attributeValueType === 'number' && isNaN(attributeValue) && attributeUntypedValue !== 'NaN' && attributeUntypedValue !== 'Infinity' && attributeUntypedValue !== '-Infinity') {\n                            var localizedError = that.localize('propertyInvalidValueType', { name: property.name, actualType: 'string', type: property.type });\n                            that.log(localizedError);\n                        }\n\n                        property.isUpdatingFromAttribute = true;\n                        that[property.name] = attributeValue;\n                        property.isUpdatingFromAttribute = false;\n                    }\n                }\n\n                /* Set the default boolean and innerhtml attributes by using the property values. */\n                for (var propertyName in that._properties) {\n                    var _property = that._properties[propertyName];\n\n                    if (propertyName === 'innerHTML' && _property.value === _property.defaultValue) {\n                        _property.value = _property.defaultValue = Utilities.Core.html(that);\n                    }\n\n                    if (_property.type === 'boolean' || _property.type === 'bool') {\n                        if (that.getAttribute(_property.attributeName) === 'false') {\n                            _property.isUpdating = true;\n                            that.setAttribute(_property.attributeName, '');\n                            _property.isUpdating = false;\n                        }\n                    }\n\n                    if (!_property.defaultReflectToAttribute || !_property.reflectToAttribute) {\n                        continue;\n                    }\n\n                    if (_property.defaultReflectToAttribute && _property.defaultReflectToAttributeConditions) {\n                        var reflectToAttribute = true;\n\n                        for (var _i2 = 0; _i2 < _property.defaultReflectToAttributeConditions.length; _i2++) {\n                            var condition = _property.defaultReflectToAttributeConditions[_i2];\n                            var conditionName = void 0;\n                            var conditionValue = void 0;\n\n                            for (var name in condition) {\n                                conditionName = name;\n                                conditionValue = condition[name];\n                            }\n\n                            if (that._properties[conditionName] && that._properties[conditionName].value !== conditionValue) {\n                                reflectToAttribute = false;\n                            }\n                        }\n\n                        if (!reflectToAttribute) {\n                            continue;\n                        }\n                    }\n\n                    that.$.setAttributeValue(_property.attributeName, _property.value, _property.type);\n                }\n\n                var children = [];\n\n                if (that.children.length > 0) {\n                    for (var _i3 = 0; _i3 < that.children.length; _i3++) {\n                        var _node2 = that.children[_i3];\n\n                        if (Utilities.Extend(_node2).isCustomElement) {\n                            children.push(_node2);\n                        }\n                    }\n                }\n\n                that.applyTemplate();\n\n                that.complete = function () {\n                    if (!that.templateBindingsReady) {\n                        var updateTemplateBindings = function updateTemplateBindings(node) {\n                            if (node.templateBindingsReady) {\n                                return;\n                            }\n\n                            node.templateBindingsReady = true;\n                            node.updateTextNodes();\n                            node.updateBoundNodes();\n                        };\n\n                        if (!that.ownerElement) {\n                            updateTemplateBindings(that);\n                        } else {\n                            var owner = that.ownerElement;\n                            var owners = [];\n                            while (owner) {\n                                owners.push(owner);\n                                owner = owner.ownerElement;\n                            }\n\n                            for (var _i4 = owners.length - 1; _i4 >= 0; _i4--) {\n                                updateTemplateBindings(owners[_i4]);\n                            }\n\n                            updateTemplateBindings(that);\n                        }\n                    }\n\n                    that._setModuleState('ready');\n\n                    that.ready();\n\n                    that.isAttached = true;\n                    that._setModuleState('attached');\n                    that.attached();\n                    that._handleListeners('listen');\n\n                    if (that.offsetWidth === 0 || that.offsetHeight === 0) {\n                        that.isHidden = true;\n                    }\n\n                    that.completed();\n\n                    if (that.whenReadyCallbacks) {\n                        for (var _i5 = 0; _i5 < that.whenReadyCallbacks.length; _i5++) {\n                            that.whenReadyCallbacks[_i5]();\n                        }\n\n                        that.whenReadyCallbacks = [];\n                    }\n\n                    that.context = document;\n                };\n\n                // All of the registered elements inside the element's local DOM are ready, and have had their ready methods called.\n                var templateNodes = [].slice.call(that.querySelectorAll('[smart-id]')).concat(children);\n\n                if (templateNodes.length === 0) {\n                    that.complete();\n                } else {\n                    that._completeListeners = 0;\n\n                    var _loop3 = function _loop3(_i6) {\n                        var node = templateNodes[_i6];\n\n                        if (Utilities.Extend(node).isCustomElement) {\n                            var completeEventHandler = function () {\n                                that._completeListeners--;\n                                if (that._completeListeners === 0) {\n                                    that.complete();\n\n                                    delete that._completeListeners;\n                                }\n                            }.bind(that);\n\n                            if (!node.isCompleted) {\n                                that._completeListeners++;\n\n                                if (!node._onCompleted) {\n                                    node.completeHandlers = [];\n\n                                    node._onCompleted = function () {\n                                        for (var _i7 = 0; _i7 < node.completeHandlers.length; _i7++) {\n                                            node.completeHandlers[_i7]();\n                                        }\n                                    };\n                                }\n                                node.completeHandlers.push(completeEventHandler);\n                            }\n                        }\n                    };\n\n                    for (var _i6 = 0; _i6 < templateNodes.length; _i6++) {\n                        _loop3(_i6);\n                    }\n\n                    if (that._completeListeners === 0) {\n                        that.complete();\n                    }\n                }\n            }\n        }, {\n            key: 'visibilityChangedHandler',\n            value: function visibilityChangedHandler() {\n                var that = this;\n\n                if (!that.isReady) {\n                    return;\n                }\n\n                if (!that.isHidden && that.offsetWidth === 0 || that.offsetHeight === 0) {\n                    that.isHidden = true;\n                } else {\n                    if (that.isHidden) {\n                        that.$.fireEvent('resize', that, {\n                            bubbles: false,\n                            cancelable: true\n                        });\n                        that.isHidden = false;\n                    }\n                }\n            }\n\n            /** Called when an attribute is changed. */\n\n        }, {\n            key: 'attributeChangedCallback',\n            value: function attributeChangedCallback(name, oldValue, newValue) {\n                var that = this;\n                var property = that.propertyByAttributeName[name];\n\n                if (name === 'class' || name === 'style') {\n                    that.visibilityChangedHandler();\n                }\n\n                if (!property) {\n                    that.attributeChanged(name, oldValue, newValue);\n                }\n\n                if (!property || property && property.isUpdating) {\n                    return;\n                }\n\n                var newPropertyValue = that.$.getAttributeValue(property.attributeName, property.type);\n                if (newValue !== undefined && that[property.name] !== newPropertyValue) {\n                    property.isUpdatingFromAttribute = true;\n                    if (newPropertyValue !== undefined) {\n                        that[property.name] = newPropertyValue;\n                    } else {\n                        that[property.name] = that._properties[property.name].defaultValue;\n                    }\n                    property.isUpdatingFromAttribute = false;\n                }\n            }\n\n            /** Called when one of the element's attributes is changed. Use to handle attribute changes that don't correspond to declared properties. */\n\n        }, {\n            key: 'attributeChanged',\n            value: function attributeChanged(name, oldValue, newValue) {\n                if (oldValue !== newValue) {\n                    /* attribute change handling logic here. */\n                }\n            }\n        }, {\n            key: 'attached',\n\n\n            /** Called after the element is attached to the document. Can be called multiple times during the lifetime of an element. */\n            value: function attached() {\n                var that = this;\n\n                if (that.hasStyleObserver) {\n                    StyleObserver.watch(that);\n                }\n\n                if (that.onAttached) {\n                    that.onAttached();\n                }\n            }\n\n            /** Called after the element is detached from the document. Can be called multiple times during the lifetime of an element. */\n\n        }, {\n            key: 'detached',\n            value: function detached() {\n                var that = this;\n\n                if (that.hasStyleObserver) {\n                    StyleObserver.unwatch(that);\n                }\n\n                that._setModuleState('detached');\n                that.isAttached = false;\n\n                if (that.ownerElement && that.ownerElement.detachedChildren.indexOf(that) === -1) {\n                    that.ownerElement.detachedChildren.push(that);\n                }\n                that._handleListeners('unlisten');\n\n                if (that.onDetached) {\n                    that.onDetached();\n                }\n            }\n\n            /** Called when a property value is changed. */\n\n        }, {\n            key: 'propertyChangedHandler',\n            value: function propertyChangedHandler(propertyName, oldValue, newValue) {\n                var that = this;\n\n                if (oldValue === newValue) {\n                    return;\n                }\n\n                if (that.propertyChanged) {\n                    that.propertyChanged(propertyName, oldValue, newValue);\n                }\n                /* Property changed logic goes here. */\n            }\n        }, {\n            key: '_handleListeners',\n            value: function _handleListeners(action) {\n                var that = this;\n                var tagName = that.tagName.toLowerCase();\n                var listeners = that.getStaticMember('listeners');\n\n                var processListeners = function processListeners(listeners) {\n                    var _loop4 = function _loop4(listener) {\n                        var path = listener.split('.');\n                        var eventType = path[0];\n                        var element = that.$;\n\n                        if (path[1]) {\n                            eventType = path[1];\n                            element = that['$' + path[0]];\n\n                            if (path[0] === 'document') {\n                                var id = that.smartId;\n                                if (id === '') {\n                                    id = Utilities.Core.toCamelCase(tagName);\n                                }\n                                eventType = eventType + '.' + id;\n                            }\n                        }\n\n                        var handlerName = listeners[listener];\n                        var handler = function handler(event) {\n                            var context = that.context;\n                            that.context = that;\n                            if (that[handlerName]) {\n                                that[handlerName].apply(that, [event]);\n                            }\n                            that.context = context;\n                        };\n\n                        if (!element) {\n                            return 'continue';\n                        }\n\n                        element[action](eventType, handler);\n                    };\n\n                    for (var listener in listeners) {\n                        var _ret7 = _loop4(listener);\n\n                        if (_ret7 === 'continue') continue;\n                    }\n                };\n\n                processListeners(listeners);\n                processListeners(that.templateListeners);\n            }\n\n            /** Parses the element's template. */\n\n        }, {\n            key: 'parseTemplate',\n            value: function parseTemplate() {\n                var that = this;\n                var template = that.template();\n                var fragment = document.createDocumentFragment();\n\n                if (template === '') {\n                    return null;\n                }\n\n                /* Create a wrapper DIV tag. */\n                var tmpElement = document.createElement('div');\n                fragment.appendChild(tmpElement);\n\n                /* Fill the nodes array with the wrapper's childNodes. */\n                tmpElement.innerHTML = template;\n                var nodes = tmpElement.childNodes;\n\n                /* Remove the wrapper DIV tag. */\n                tmpElement.parentNode.removeChild(tmpElement);\n\n                /* Add the nodes to the fragment. */\n                for (var i = 0; i < nodes.length; i++) {\n                    fragment.appendChild(nodes[i]);\n                }\n\n                return fragment;\n            }\n        }, {\n            key: 'applyTemplate',\n            value: function applyTemplate() {\n                var that = this;\n\n                var templateElement = that.parseTemplate();\n\n                if (!templateElement) {\n                    return;\n                }\n\n                var template = document.importNode(templateElement, true);\n\n                if (!template.hasChildNodes) {\n                    return;\n                }\n\n                var rootElement = template.childNodes[0];\n                var map = function map(name, element) {\n                    that['$' + name] = element.$ = Utilities.Extend(element);\n                    that.$[name] = element;\n                    element.ownerElement = that;\n                };\n\n                /* Create a content element. */\n                var contentElement = rootElement;\n\n                if (rootElement.getElementsByTagName('content').length > 0) {\n                    var contentInsertionPoint = rootElement.getElementsByTagName('content')[0];\n                    contentElement = contentInsertionPoint.parentNode;\n                    contentElement.removeChild(contentInsertionPoint);\n                } else {\n                    var preudoContentElement = template.querySelectorAll('[inner-h-t-m-l]');\n                    if (preudoContentElement && preudoContentElement.length > 0) {\n                        contentElement = preudoContentElement[0];\n                    }\n                }\n\n                /* Build nodes map. */\n                var templateNodes = template.querySelectorAll('[id]');\n                if (templateNodes.length === 0) {\n                    templateNodes = template.querySelectorAll('*');\n                }\n\n                map('root', rootElement);\n                map('content', contentElement);\n\n                that.$.html = that.innerHTML.toString().trim();\n\n                for (var i = 0; i < templateNodes.length; i += 1) {\n                    var templateNode = templateNodes[i];\n                    if (templateNode.id === '') {\n                        templateNode.id = 'child' + i;\n                    }\n\n                    map(templateNode.id, templateNode);\n                    templateNode.setAttribute('smart-id', templateNode.id);\n\n                    if (!that.shadowRoot) {\n                        templateNode.removeAttribute('id');\n                    }\n                }\n\n                that.bindings = that.getBindings(template);\n                that.$root.addClass('smart-container');\n                /* Move element's initial nodes to the content element. */\n                while (that.childNodes.length) {\n                    contentElement.appendChild(that.firstChild);\n                }\n\n                /* Append the template. */\n                that.appendTemplate(template);\n            }\n        }, {\n            key: 'appendTemplate',\n            value: function appendTemplate(template) {\n                var that = this;\n\n                that.appendChild(template);\n            }\n\n            /** Defines the custom element's default modules. The function is called once when the element's script file is referred. */\n\n        }, {\n            key: 'defineElementModules',\n            value: function defineElementModules() {\n                var that = this;\n\n                var proto = that.constructor.prototype;\n                proto.modules = that.constructor.modules;\n\n                var modules = proto.modules;\n\n                for (var i = 0; i < modules.length; i += 1) {\n                    that.addModule(modules[i]);\n                }\n            }\n        }, {\n            key: 'watch',\n            value: function watch(properties, propertyChangedCallback) {\n                var that = this;\n\n                if (properties === null || propertyChangedCallback === null) {\n                    that._watch = null;\n                    return;\n                }\n\n                that._watch = {\n                    properties: properties,\n                    propertyChangedCallback: propertyChangedCallback\n                };\n            }\n        }, {\n            key: 'unwatch',\n            value: function unwatch() {\n                var that = this;\n\n                that._watch = null;\n            }\n        }, {\n            key: '_setModuleState',\n            value: function _setModuleState(stateName, args) {\n                var that = this;\n                var statusName = 'is' + stateName.substring(0, 1).toUpperCase() + stateName.substring(1);\n                var callbackName = 'on' + stateName.substring(0, 1).toUpperCase() + stateName.substring(1);\n\n                for (var i = 0; i < that.modulesList.length; i++) {\n                    var module = that.modulesList[i];\n\n                    module[statusName] = true;\n\n                    if (module[stateName]) {\n                        module[stateName](args);\n                    }\n\n                    if (module[callbackName]) {\n                        module[callbackName](args);\n                    }\n                }\n            }\n\n            /**\r\n             * Adds a module to the the element. Module's methods and properties are mixed into the element's prototype.\r\n             * @param {Object}.\r\n             */\n\n        }, {\n            key: 'addModule',\n            value: function addModule(module) {\n                var that = this;\n\n                if (!module) {\n                    return;\n                }\n\n                var modules = that.modules.slice(0);\n                var proto = module.prototype;\n\n                if (!module.moduleName && module.name) {\n                    module.moduleName = module.name;\n                }\n\n                if (modules.findIndex(function (currentModule) {\n                    return module.moduleName === currentModule.moduleName;\n                }) === -1) {\n                    modules.push(module);\n                }\n\n                that.defineModule(module);\n                that.defineElementMethods(proto.methodNames, proto);\n                that.defineElementProperties(module.properties);\n\n                var elementProto = that.constructor.prototype;\n                elementProto.modules = modules;\n            }\n\n            /** Defines a module and creates its properties. */\n\n        }, {\n            key: 'defineModule',\n            value: function defineModule(module) {\n                if (module.isDefined) {\n                    return;\n                }\n\n                module.prototype._initModule = function (element) {\n                    var that = this;\n\n                    that.ownerElement = element;\n                };\n\n                var properties = module.properties || {};\n                var propertyNames = Object.keys(properties);\n                var methodNames = Object.getOwnPropertyNames(module.prototype);\n\n                module.prototype.methodNames = methodNames;\n\n                var _loop5 = function _loop5(j) {\n                    var propertyName = propertyNames[j];\n                    var property = properties[propertyName];\n\n                    Object.defineProperty(module.prototype, propertyName, {\n                        configurable: false,\n                        enumerable: true,\n                        get: function get() {\n                            var that = this;\n\n                            if (!that.ownerElement) {\n                                return property.value;\n                            }\n\n                            return that.ownerElement[propertyName];\n                        },\n                        set: function set(value) {\n                            var that = this;\n\n                            that.ownerElement[propertyName] = value;\n                        }\n                    });\n                };\n\n                for (var j = 0; j < propertyNames.length; j += 1) {\n                    _loop5(j);\n                }\n\n                module.isDefined = true;\n            }\n        }, {\n            key: 'getStaticMember',\n            value: function getStaticMember(memberName) {\n                var that = this;\n                var element = window.Smart[that.elementName];\n\n                var staticMember = element[memberName];\n                var inheritedStaticMember = {};\n                var baseProto = Object.getPrototypeOf(element);\n                var protoChain = [];\n\n                while (baseProto[memberName]) {\n                    protoChain.push(baseProto[memberName]);\n                    baseProto = Object.getPrototypeOf(baseProto);\n                }\n\n                for (var i = protoChain.length - 1; i >= 0; i--) {\n                    inheritedStaticMember = Utilities.Core.assign(inheritedStaticMember, protoChain[i]);\n                }\n\n                return Utilities.Core.assign(inheritedStaticMember, staticMember);\n            }\n\n            /** Defines the element properties, methods and modules. */\n\n        }, {\n            key: 'defineElement',\n            value: function defineElement() {\n                var that = this;\n                var proto = that.constructor.prototype;\n                var properties = that.getStaticMember('properties');\n                var methods = Object.getOwnPropertyNames(proto);\n\n                proto.extendedProperties = {};\n                proto.boundProperties = {};\n                proto.templateListeners = {};\n\n                that.defineElementModules();\n                that.defineElementMethods(methods, proto);\n                that.defineElementProperties(properties);\n\n                /* Initialization of element's instance properties. */\n                proto._initElement = function () {\n                    var that = this;\n\n                    var properties = proto.extendedProperties;\n                    var propertyNames = Object.keys(properties);\n                    var modules = that.modules;\n\n                    that.$ = Utilities.Extend(that);\n                    that.$document = $document;\n                    that.smartId = (Date.now().toString(36) + Math.random().toString(36).substr(2, 5)).toUpperCase();\n\n                    if (!that.isCreated) {\n                        that.modulesList = [];\n                        that._properties = [];\n                        if (that._beforeCreatedProperties) {\n                            that._properties = that._beforeCreatedProperties;\n                            delete that._beforeCreatedProperties;\n                        }\n\n                        that.detachedChildren = [];\n                        that.propertyByAttributeName = [];\n                    }\n\n                    for (var i = 0; i < modules.length; i += 1) {\n                        var module = modules[i];\n                        var moduleInstance = new module();\n                        moduleInstance._initModule(that);\n                        that.modulesList.push(moduleInstance);\n                    }\n\n                    var _loop6 = function _loop6(_i8) {\n                        var propertyName = propertyNames[_i8];\n                        var property = properties[propertyName];\n                        var defaultValue = property.value;\n\n                        if (that._properties[propertyName]) {\n                            if (that._properties[propertyName].notify !== undefined) {\n                                return 'continue';\n                            } else {\n                                delete that._properties[propertyName];\n                            }\n                        }\n\n                        if (isOldChrome && propertyName === 'innerHTML') {\n                            delete that[propertyName];\n                        }\n\n                        if (window.navigator.userAgent.indexOf('PhantomJS') === -1 && that.hasOwnProperty(propertyName)) {\n                            defaultValue = that[propertyName];\n\n                            delete that[propertyName];\n                        }\n\n                        if (property.type === 'array' && defaultValue !== undefined && defaultValue !== null) {\n                            defaultValue = defaultValue.slice(0);\n                        }\n\n                        if (property.type === 'object' && defaultValue !== undefined && defaultValue !== null) {\n                            if (defaultValue instanceof Array) {\n                                defaultValue = defaultValue.slice(0);\n                            } else {\n                                defaultValue = Object.assign({}, defaultValue);\n                            }\n                        }\n\n                        that._properties[propertyName] = {\n                            name: propertyName,\n                            notify: property.notify,\n                            allowedValues: property.allowedValues,\n                            type: property.type,\n                            nullable: property.nullable,\n                            reflectToAttribute: property.reflectToAttribute,\n                            defaultReflectToAttribute: property.defaultReflectToAttribute,\n                            defaultReflectToAttributeConditions: property.defaultReflectToAttributeConditions,\n                            value: defaultValue,\n                            readOnly: property.readOnly,\n                            defaultValue: defaultValue,\n                            attributeName: property.attributeName,\n                            observer: property.observer,\n                            inherit: property.inherit,\n                            extend: property.extend,\n                            validator: property.validator\n                        };\n\n                        that.propertyByAttributeName[property.attributeName] = that._properties[propertyName];\n\n                        if (!property.hasOwnProperty('type')) {\n                            var localizedError = that.localize('propertyUnknownType', { name: propertyName });\n                            that.log(localizedError);\n                        }\n\n                        if (property.type === 'any') {\n                            return 'continue';\n                        }\n\n                        var defaultValueType = Utilities.Types.getType(defaultValue);\n                        if (defaultValue !== undefined && defaultValue !== null && property.type !== defaultValueType && !property.validator) {\n                            if (property.type === 'object' && defaultValueType === 'array') {\n                                return 'continue';\n                            }\n\n                            if (defaultValueType === 'number') {\n                                var types = ['integer', 'int', 'float'];\n                                var propertyIndex = types.findIndex(function (type) {\n                                    return type === property.type;\n                                });\n\n                                if (propertyIndex >= 0) {\n                                    return 'continue';\n                                }\n                            }\n                            var _localizedError = that.localize('propertyInvalidValueType', { name: propertyName, actualType: defaultValueType, type: property.type });\n                            that.log(_localizedError);\n                        }\n                    };\n\n                    for (var _i8 = 0; _i8 < propertyNames.length; _i8 += 1) {\n                        var _ret9 = _loop6(_i8);\n\n                        if (_ret9 === 'continue') continue;\n                    }\n\n                    that.isCreated = true;\n                };\n\n                /* Calls the registered method. It is useful for one-time configuration. */\n                proto.registered();\n            }\n\n            /**\r\n             * Defines Element's methods. \r\n             * {Array} - methods.\r\n             * {Object} - method owner's prototype.\r\n             */\n\n        }, {\n            key: 'defineElementMethods',\n            value: function defineElementMethods(methods, proto) {\n                var that = this;\n                var elementProto = that.constructor.prototype;\n\n                var invokeMethod = function invokeMethod(method, methodName) {\n                    var args = Array.prototype.slice.call(arguments, 2);\n\n                    var elementMethod = function elementMethod() {\n                        /* Raise an exception when the method is invoked while the element is not in Ready state. */\n                        if (!this.isReady && methodName !== 'localize' && methodName !== 'log') {\n                            var localizedError = this.localize('elementNotInDOM');\n                            this.log(localizedError);\n                        }\n\n                        var methodContext = this;\n                        for (var i = 0; i < this.modulesList.length; i++) {\n                            var module = this.modulesList[i];\n                            if (methodName in module) {\n                                methodContext = module;\n                                break;\n                            }\n                        }\n\n                        var context = this.context;\n                        this.context = this;\n                        var result = method.apply(methodContext, args.concat(Array.prototype.slice.call(arguments)));\n                        this.context = context;\n\n                        return result;\n                    };\n\n                    return elementMethod;\n                };\n\n                /* Exclude these methods. */\n                var excludeMethods = ['constructor', 'ready', 'created', 'attached', 'detached', 'appendChild', 'insertBefore', 'removeChild', 'propertyChangedHandler'];\n\n                /* Wrap Custom Element's methods. */\n\n                var _loop7 = function _loop7(index) {\n                    var methodName = methods[index];\n\n                    if (methodName.startsWith('_') || excludeMethods.find(function (excludeMethodName) {\n                        return excludeMethodName === methodName;\n                    }) !== undefined) {\n                        return 'continue';\n                    }\n\n                    if (elementProto.extendedProperties[methodName]) return 'continue';\n\n                    if (!Utilities.Types.isFunction(proto[methodName])) return 'continue';\n\n                    elementProto[methodName] = invokeMethod(proto[methodName], methodName);\n                };\n\n                for (var index in methods) {\n                    var _ret10 = _loop7(index);\n\n                    if (_ret10 === 'continue') continue;\n                }\n            }\n\n            /** Defines the custom element's properties. The function is called once when an element's script file is referred. */\n\n        }, {\n            key: 'defineElementProperties',\n            value: function defineElementProperties(properties) {\n                if (!properties) {\n                    return;\n                }\n\n                var that = this;\n                var proto = that.constructor.prototype;\n                var propertyNames = Object.keys(properties);\n                var defaultProperties = that.getStaticMember('properties');\n\n                Object.assign(proto.extendedProperties, properties);\n\n                /* Called when a property is set. Updates the property and synchronizes with the attribute. */\n                var updateProperty = function updateProperty(context, property, value) {\n                    var that = context;\n\n                    if (property.readOnly) {\n                        return;\n                    }\n\n                    /* Raises an exception when the new value is not in the allowedValues list. */\n                    if (property.allowedValues) {\n                        var isValidValue = false;\n\n                        for (var i = 0; i < property.allowedValues.length; i++) {\n                            if (property.allowedValues[i] === value) {\n                                isValidValue = true;\n                                break;\n                            }\n                        }\n\n                        if (!isValidValue) {\n                            var allowedValuesString = JSON.stringify(property.allowedValues).replace(/\\[|\\]/gi, '').replace(',', ', ').replace(/\"/gi, '\\'');\n                            var actualValueString = '\\'' + value + '\\'';\n                            var localizedError = that.localize('propertyInvalidValue', { name: property.name, actualValue: actualValueString, value: allowedValuesString });\n\n                            that.log(localizedError);\n                            return;\n                        }\n                    }\n\n                    var propertyName = property.name;\n                    var oldValue = that._properties[propertyName].value;\n\n                    /* Calls the property's validator, if defined. */\n                    if (property.validator) {\n                        if (that[property.validator]) {\n                            var _context = that.context;\n\n                            that.context = that;\n\n                            var validatedResult = that[property.validator](oldValue, value);\n\n                            if (validatedResult !== undefined) {\n                                value = validatedResult;\n                            }\n\n                            that.context = _context;\n                        }\n                    }\n\n                    if (oldValue === value) {\n                        return;\n                    }\n\n                    if (!property.hasOwnProperty('type')) {\n                        var _localizedError2 = that.localize('propertyUnknownType', { name: propertyName });\n                        that.log(_localizedError2);\n                    }\n\n                    if (property.type === 'array' && JSON.stringify(oldValue) === JSON.stringify(value)) {\n                        return;\n                    }\n\n                    if (value !== undefined && value !== null && property.type !== 'any' && property.type !== Utilities.Types.getType(value) && !property.validator || value === null && !property.nullable) {\n                        var throwError = true;\n\n                        if (property.type === 'object' && Utilities.Types.getType(value) === 'array') {\n                            throwError = false;\n                        }\n\n                        if (Utilities.Types.getType(value) === 'number') {\n                            var types = ['integer', 'int', 'float'];\n                            var propertyIndex = types.findIndex(function (type) {\n                                return type === property.type;\n                            });\n\n                            if (propertyIndex >= 0) {\n                                throwError = false;\n                            }\n                        }\n\n                        if (throwError) {\n                            var _localizedError3 = that.localize('propertyInvalidValueType', { name: propertyName, actualType: Utilities.Types.getType(value), type: property.type });\n                            that.log(_localizedError3);\n                            return;\n                        }\n                    }\n\n                    property.isUpdating = true;\n                    that._properties[propertyName].value = value;\n\n                    /* Updates the element's attribute value. */\n                    if (!property.isUpdatingFromAttribute && property.reflectToAttribute) {\n                        that.$.setAttributeValue(property.attributeName, value, property.type);\n                    }\n\n                    /* Calls the element's propertyChangedHandler function when the element is in Ready state and the property is observed. */\n                    var isReady = that.isReady && (!that.ownerElement || that.ownerElement && that.ownerElement.isReady);\n\n                    if (isReady) {\n                        if (that.context !== that) {\n                            /* Setting context to that prevents calling propertyChangedHandler, if the custom element's developer\r\n                             * sets another element property within the propertyChangedHandler. \r\n                            */\n                            var _context2 = that.context;\n\n                            that.context = that;\n                            that.propertyChangedHandler(propertyName, oldValue, value);\n                            that.context = _context2;\n\n                            /* Calls the property's observer, if defined. */\n                            if (property.observer) {\n                                if (that[property.observer]) {\n                                    that.context = that;\n                                    that[property.observer](oldValue, value);\n                                    that.context = document;\n                                }\n                            }\n\n                            if (that._watch && that._watch.properties.indexOf(propertyName) >= 0) {\n                                that._watch.propertyChangedCallback(propertyName, oldValue, value);\n                            }\n                        }\n\n                        /* Dispatch an event when property's notify member is set. */\n                        var notify = property.notify || that.boundProperties[propertyName];\n                        if (notify) {\n                            that.$.fireEvent(property.attributeName + '-changed', { context: that.context, oldValue: oldValue, value: value });\n                            if (that.boundProperties[propertyName]) {\n                                that.updateBoundNodes(propertyName);\n                            }\n                        }\n\n                        if (that.dataContextProperties) {\n                            if (propertyName === 'dataContext') {\n                                that.applyDataContext();\n                            } else if (that.dataContextProperties[propertyName]) {\n                                that.updateDataContextProperty(propertyName);\n                            }\n                        }\n                    }\n                    property.isUpdating = false;\n                };\n\n                /* Defines element's properties. */\n\n                var _loop8 = function _loop8(i) {\n                    var propertyName = propertyNames[i];\n                    var property = properties[propertyName];\n                    var attributeName = Utilities.Core.toDash(propertyName);\n                    var type = property.type || 'any';\n                    var nullable = type.indexOf('?') >= 0 || type === 'any';\n\n                    if (nullable && type !== 'any') {\n                        property.type = type.substring(0, type.length - 1);\n                    }\n\n                    property.nullable = nullable;\n                    property.attributeName = attributeName.toLowerCase();\n                    property.name = propertyName;\n                    property.reflectToAttribute = property.reflectToAttribute !== undefined ? property.reflectToAttribute : true;\n\n                    if (property.inherit && defaultProperties[propertyName]) {\n                        property.value = defaultProperties[propertyName].value;\n                    }\n\n                    if (property.extend && defaultProperties[propertyName]) {\n                        Utilities.Core.assign(property.value, defaultProperties[propertyName].value);\n                    }\n\n                    if (proto.hasOwnProperty(propertyName)) {\n                        return 'continue';\n                    }\n\n                    Object.defineProperty(proto, propertyName, {\n                        configurable: false,\n                        enumerable: true,\n                        get: function get() {\n                            var that = this;\n\n                            return that._properties[propertyName].value;\n                        },\n                        set: function set(value) {\n                            var that = this;\n\n                            updateProperty(that, that._properties[propertyName], value);\n                        }\n                    });\n                };\n\n                for (var i = 0; i < propertyNames.length; i += 1) {\n                    var _ret11 = _loop8(i);\n\n                    if (_ret11 === 'continue') continue;\n                }\n            }\n        }, {\n            key: 'properties',\n            get: function get() {\n                var that = this;\n\n                if (!that._properties) {\n                    that._properties = [];\n                }\n\n                return that._properties;\n            }\n\n            /**\r\n             * Gets the element's parents.\r\n             *\r\n             * @return {Array<HTMLElement>} - element's parents.\r\n             */\n\n        }, {\n            key: 'parents',\n            get: function get() {\n                var that = this;\n\n                var matched = [],\n                    current = that.parentNode;\n\n                while (current && current.nodeType !== 9) {\n                    if (current instanceof HTMLElement === true) {\n                        matched.push(current);\n                    }\n                    current = current.parentNode;\n                }\n                return matched;\n            }\n\n            /**\r\n             * Gets if the element is currently focused.\r\n             *\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'focused',\n            get: function get() {\n                return this.contains(document.activeElement);\n            }\n        }, {\n            key: 'hasStyleObserver',\n            get: function get() {\n                return true;\n            }\n        }], [{\n            key: 'properties',\n\n            /**\r\n             * Element's properties.\r\n             *\r\n             * @return {Object} - element's properties.\r\n             */\n            get: function get() {\n                return {\n                    'unfocusable': {\n                        value: false,\n                        type: 'boolean'\n                    },\n                    'disabled': {\n                        value: false,\n                        type: 'boolean'\n                    },\n                    'dataContext': {\n                        value: null,\n                        reflectToAttribute: false,\n                        type: 'any'\n                    },\n                    'readonly': {\n                        value: false,\n                        type: 'boolean'\n                    },\n                    'rightToLeft': {\n                        value: false,\n                        type: 'boolean'\n                    },\n                    'messages': {\n                        value: {\n                            'en': {\n                                'propertyUnknownType': '\\'{{name}}\\' property is with undefined \\'type\\' member!',\n                                'propertyInvalidValue': 'Invalid \\'{{name}}\\' property value! Actual value: {{actualValue}}, Expected value: {{value}}!',\n                                'propertyInvalidValueType': 'Invalid \\'{{name}}\\' property value type! Actual type: {{actualType}}, Expected type: {{type}}!',\n                                'elementNotInDOM': 'Element does not exist in DOM! Please, add the element to the DOM, before invoking a method.',\n                                'moduleUndefined': 'Module is undefined.',\n                                'missingReference': '{{elementType}}: Missing reference to {{files}}.',\n                                'htmlTemplateNotSuported': '{{elementType}}: Browser doesn\\'t support HTMLTemplate elements.',\n                                'invalidTemplate': '{{elementType}}: \"{{property}}\" property accepts a string that must match the id of an HTMLTemplate element from the DOM.'\n                            }\n                        },\n                        reflectToAttribute: false,\n                        type: 'object'\n                    }\n                };\n            }\n\n            /**\r\n             * Element's requires.\r\n             *\r\n             * @return {Object} - element's required modules.\r\n             */\n\n        }, {\n            key: 'requires',\n            get: function get() {\n                return {};\n            }\n\n            /**\r\n             * Element's listeners.\r\n             *\r\n             * @return {Object} - element's listeners.\r\n             */\n\n        }, {\n            key: 'listeners',\n            get: function get() {\n                return {};\n            }\n\n            /**\r\n             * Element's modules.\r\n             *\r\n             * @return {Array<Module>} - element's modules.\r\n             */\n\n        }, {\n            key: 'modules',\n            get: function get() {\n                return window.Smart.Modules;\n            }\n        }]);\n        return BaseElement;\n    }(HTMLElement);\n\n    var customElements = [];\n    var registeredCallbacks = [];\n    var registeredLoadedCallbacks = [];\n    var isOldChrome = false;\n\n    var chromeAgent = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n    if (chromeAgent) {\n        var chromeVersion = parseInt(chromeAgent[2], 10);\n        if (chromeVersion <= 50) {\n            isOldChrome = true;\n        }\n    }\n\n    //const isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n    var isIE = navigator.userAgent.match(/MSIE/) || !!window.MSInputMethodContext && !!document.documentMode;\n    var supportsCustomElementsV1 = !isIE && 'customElements' in window;\n    var connectElements = function connectElements() {\n        if (document.readyState !== 'complete') {\n            return;\n        }\n\n        registeredLoadedCallbacks.sort(function (element1, element2) {\n            var indexA = element1.element.parents.length;\n            var indexB = element2.element.parents.length;\n\n            if (indexA < indexB) {\n                return -1;\n            }\n            if (indexA > indexB) {\n                return 1;\n            }\n\n            return 0;\n        });\n\n        for (var i = 0; i < registeredLoadedCallbacks.length; i++) {\n            registeredLoadedCallbacks[i].callback();\n            registeredLoadedCallbacks[i].element.isLoading = false;\n        }\n\n        registeredLoadedCallbacks = [];\n        document.removeEventListener('readystatechange', connectElements);\n    };\n\n    document.addEventListener('readystatechange', connectElements);\n\n    var BaseCustomElement = function (_BaseElement) {\n        babelHelpers.inherits(BaseCustomElement, _BaseElement);\n\n        function BaseCustomElement() {\n            babelHelpers.classCallCheck(this, BaseCustomElement);\n            return babelHelpers.possibleConstructorReturn(this, (BaseCustomElement.__proto__ || Object.getPrototypeOf(BaseCustomElement)).apply(this, arguments));\n        }\n\n        babelHelpers.createClass(BaseCustomElement, [{\n            key: 'createdCallback',\n\n            /** Called when an instance of the custom element is created. */\n            value: function createdCallback() {\n                /*  initialization code goes here. */\n                var that = this;\n\n                that.classList.add('smart-element-init');\n                that.created();\n            }\n\n            /** Called when an instance of custom element is attached to the DOM. */\n\n        }, {\n            key: 'attachedCallback',\n            value: function attachedCallback() {\n                var that = this;\n\n                if (that.isLoading) {\n                    return;\n                }\n\n                var updateVisibility = function updateVisibility() {\n                    that.classList.remove('smart-element-init');\n                };\n\n                if (document.readyState === 'complete' /*&& !ElementRegistry.isRegistering */) {\n                        updateVisibility();\n                        that.setup();\n                    } else {\n                    that.isLoading = true;\n                    registeredLoadedCallbacks.push({\n                        element: this, callback: function () {\n                            if (this.isReady) {\n                                return;\n                            }\n\n                            updateVisibility();\n                            this.setup();\n                        }.bind(that)\n                    });\n                }\n            }\n\n            /** Called when an instance of custom element is detached from the DOM. V0 spec. */\n\n        }, {\n            key: 'detachedCallback',\n            value: function detachedCallback() {\n                var that = this;\n\n                if (!that.isAttached) {\n                    return;\n                }\n\n                that.detached();\n            }\n        }]);\n        return BaseCustomElement;\n    }(BaseElement);\n\n    var BaseCustomElementV1 = function (_BaseElement2) {\n        babelHelpers.inherits(BaseCustomElementV1, _BaseElement2);\n        babelHelpers.createClass(BaseCustomElementV1, [{\n            key: 'scopedStyle',\n            value: function scopedStyle() {\n                var scopedStyle = '\\n                :host {\\n                    display: block;\\n                    overflow: hidden;\\n                }\\n                :host, :host > *:first-child, :host > * {\\n                    box-sizing: border-box;\\n                }\\n                :host[disabled] {\\n                    opacity: 0.55;\\n                    cursor: default;\\n                }\\n                .smart-container {\\n                    box-sizing: border-box;\\n                    font-family: Arial, sans-serif;\\n                    font-size: inherit;\\n                    display: block;\\n                    width: 100%;\\n                    height: 100%;\\n                    outline: none;\\n                    margin: 0;\\n                    padding: 0;\\n                }\\n            ';\n                return scopedStyle;\n            }\n        }, {\n            key: 'addExternalStylesheet',\n            value: function addExternalStylesheet(path) {\n                var that = this;\n\n                if (!that.shadowRoot || !path) {\n                    return;\n                }\n\n                var link = document.createElement('link');\n\n                link.rel = 'stylesheet';\n                link.type = 'text/css';\n                link.href = path;\n\n                that.shadowRoot.insertBefore(link, that.shadowRoot.firstChild);\n            }\n        }, {\n            key: 'attributeChanged',\n            value: function attributeChanged(name, oldValue, newValue) {\n                if (name === 'external-style') {\n                    this.externalStyle = newValue;\n                }\n            }\n        }, {\n            key: 'attributeChangedCallback',\n            value: function attributeChangedCallback(name, oldValue, newValue) {\n                var that = this;\n\n                if (!that.isReady) {\n                    return;\n                }\n\n                babelHelpers.get(BaseCustomElementV1.prototype.__proto__ || Object.getPrototypeOf(BaseCustomElementV1.prototype), 'attributeChangedCallback', this).call(this, name, oldValue, newValue);\n            }\n            /** Called when an instance of the custom element is created. */\n\n        }, {\n            key: 'externalStyle',\n            get: function get() {\n                return this._externalStylePath;\n            },\n            set: function set(path) {\n                this._externalStylePath = path;\n            }\n        }], [{\n            key: 'observedAttributes',\n            get: function get() {\n                var that = this;\n                var observedAttributes = ['external-style'];\n\n                for (var _propertyName2 in that.prototype.extendedProperties) {\n                    var propertyConfig = that.prototype.extendedProperties[_propertyName2];\n\n                    observedAttributes.push(propertyConfig.attributeName);\n                }\n\n                return observedAttributes;\n            }\n        }]);\n\n        function BaseCustomElementV1() {\n            babelHelpers.classCallCheck(this, BaseCustomElementV1);\n\n            /*  initialization code goes here. */\n            var _this5 = babelHelpers.possibleConstructorReturn(this, (BaseCustomElementV1.__proto__ || Object.getPrototypeOf(BaseCustomElementV1)).call(this));\n\n            var that = _this5;\n\n            that._externalStylePath = '';\n            // Uncomment when scopedStyle is implemented in all elements.\n            //that.attachShadow({ mode: 'open' });\n            that.created();\n            return _this5;\n        }\n\n        babelHelpers.createClass(BaseCustomElementV1, [{\n            key: 'connect',\n            value: function connect() {\n                var that = this;\n\n                var isReady = that.isReady;\n                var templateStyle = void 0;\n\n                if (!isReady) {\n                    if (that.children.length > 0 && that.children[0] instanceof HTMLStyleElement) {\n                        templateStyle = that.children[0];\n                        that.removeChild(templateStyle);\n                    }\n                }\n\n                that.setup();\n\n                if (!isReady && that.shadowRoot) {\n                    if (templateStyle) {\n                        that.shadowRoot.insertBefore(templateStyle, that.shadowRoot.firstChild);\n                    }\n\n                    that.addExternalStylesheet(that._externalStylePath);\n\n                    var scopedStyle = document.createElement('style');\n                    scopedStyle.innerHTML = that.scopedStyle();\n                    that.shadowRoot.insertBefore(scopedStyle, that.shadowRoot.firstChild);\n                }\n            }\n            /** Called when an instance of custom element is attached to the DOM. */\n\n        }, {\n            key: 'connectedCallback',\n            value: function connectedCallback() {\n                var that = this;\n\n                if (that.isLoading) {\n                    return;\n                }\n\n                that.classList.add('smart-element-init');\n\n                var updateVisibility = function updateVisibility() {\n                    that.classList.remove('smart-element-init');\n                };\n\n                if (document.readyState === 'complete' /*&& !ElementRegistry.isRegistering */) {\n                        updateVisibility();\n                        that.connect();\n                    } else {\n                    that.isLoading = true;\n                    registeredLoadedCallbacks.push({\n                        element: this, callback: function () {\n                            if (this.isReady) {\n                                return;\n                            }\n\n                            updateVisibility();\n                            this.connect();\n                        }.bind(that)\n                    });\n                }\n            }\n\n            /** Called when an instance of custom element is detached from the DOM. V0 spec. */\n\n        }, {\n            key: 'disconnectedCallback',\n            value: function disconnectedCallback() {\n                var that = this;\n\n                if (!that.isAttached) {\n                    return;\n                }\n\n                that.detached();\n            }\n\n            /** Called when an instance of custom element is attached to the DOM. */\n\n        }, {\n            key: 'adoptedCallback',\n            value: function adoptedCallback() {\n                var that = this;\n\n                that.setup();\n            }\n        }, {\n            key: 'appendTemplate',\n            value: function appendTemplate(template) {\n                var that = this;\n\n                if (that.shadowRoot) {\n                    that.shadowRoot.appendChild(template);\n                } else {\n                    that.appendChild(template);\n                }\n            }\n        }]);\n        return BaseCustomElementV1;\n    }(BaseElement);\n\n    /**\r\n     * This is a base class for registration of custom elements.\r\n     */\n\n\n    var ElementRegistry = function () {\n        function ElementRegistry() {\n            babelHelpers.classCallCheck(this, ElementRegistry);\n        }\n\n        babelHelpers.createClass(ElementRegistry, null, [{\n            key: 'register',\n\n            /**\r\n             * Called by each custom element to register it. \r\n               @param {String} - tag name.\r\n               @param {Object} - element's object like Button, NumericTextBox, etc.\r\n             */\n            value: function register(tagName, element) {\n                var proto = element.prototype;\n                var elementName = Core.toCamelCase(tagName).replace(/[a-z]+/, '');\n\n                if (customElements[tagName]) {\n                    return;\n                }\n\n                customElements[tagName] = window.Smart[elementName] = element;\n                proto.elementName = elementName;\n                proto.defineElement();\n                if (registeredCallbacks[tagName]) {\n                    registeredCallbacks[tagName](proto);\n                }\n\n                /** Use customElements v1 spec, if it is supported. */\n                if (supportsCustomElementsV1) {\n                    window.customElements.define(tagName, element);\n                    return;\n                }\n\n                document.registerElement(tagName, element);\n            }\n        }, {\n            key: 'registerElements',\n            value: function registerElements() {\n                var that = this;\n\n                if (!that.toRegister) {\n                    return;\n                }\n\n                that.isRegistering = true;\n\n                for (var i = that.toRegister.length - 1; i >= 0; i--) {\n                    var toRegisterItem = that.toRegister[i];\n\n                    that.register(toRegisterItem.tagName, toRegisterItem.element);\n                }\n\n                that.isRegistering = false;\n            }\n\n            /**\r\n             * Returns the element's object.\r\n             * @param {String} - tag name.\r\n             * @return {Object} - custom element's object.\r\n             */\n\n        }, {\n            key: 'get',\n            value: function get(tagName) {\n                if (customElements[tagName]) {\n                    return customElements[tagName];\n                }\n                return undefined;\n            }\n\n            /**\r\n             * Determines whether the element is registered.\r\n             * @param {String} - tag name.\r\n             * @param {Function} - the callback function which is called when the element is registered.\r\n             */\n\n        }, {\n            key: 'whenRegistered',\n            value: function whenRegistered(tagName, callback) {\n                if (!tagName) {\n                    throw new Error('Syntax Error: Invalid tag name');\n                }\n\n                var that = this;\n                var existingCallback = registeredCallbacks[tagName];\n                var element = that.get(tagName);\n                var modulesLength = element ? element.modules.length : 3;\n\n                try {\n                    if (!existingCallback && !element) {\n                        registeredCallbacks[tagName] = function (proto) {\n                            try {\n                                callback(proto);\n                            } catch (error) {\n                                var errorMessage = error instanceof Error ? error.message : error.toString();\n\n                                console.log(errorMessage);\n                            }\n                        };\n                    } else if (!existingCallback && element) {\n                        callback(element.prototype);\n                        registeredCallbacks[tagName] = undefined;\n                    } else if (existingCallback && !element) {\n                        registeredCallbacks[tagName] = function (proto) {\n                            existingCallback(proto);\n                            callback(proto);\n                        };\n                    } else if (existingCallback && element) {\n                        existingCallback(element.proto);\n                        callback(element.proto);\n                        registeredCallbacks[tagName] = undefined;\n                    }\n                } catch (error) {\n                    var errorMessage = error instanceof Error ? error.message : error.toString();\n\n                    console.log(errorMessage);\n                }\n\n                if (element && modulesLength !== element.prototype.modules.length) {\n                    var elements = document.querySelectorAll(tagName);\n\n                    for (var j = 0; j < elements.length; j++) {\n                        var _element = elements[j];\n\n                        if (_element.isCreated) {\n                            _element._initElement();\n                        }\n                    }\n                }\n            }\n        }]);\n        return ElementRegistry;\n    }();\n\n    ElementRegistry.lazyRegister = false;\n    ElementRegistry.tagNames = [];\n\n    /*\r\n     * Defines the 'Smart' namespace.\r\n     * @param {String} - the tag's name.\r\n     * @param {Object} - the custom element.\r\n     */\n    window.Smart = function (tagName, element) {\n        var name = tagName;\n\n        if (ElementRegistry.tagNames[name]) {\n            name = ElementRegistry.tagNames[name];\n        }\n\n        if (ElementRegistry.lazyRegister) {\n            if (!ElementRegistry.toRegister) {\n                ElementRegistry.toRegister = [];\n            }\n\n            var elementName = Core.toCamelCase(name).replace(/[a-z]+/, '');\n            window.Smart[elementName] = element;\n\n            ElementRegistry.toRegister.push({ tagName: name, element: element });\n            return;\n        }\n\n        ElementRegistry.register(name, element);\n    };\n\n    Object.assign(window.Smart, {\n        Elements: ElementRegistry,\n        Modules: [ErrorModule, LocalizationModule, BindingModule],\n        BaseElement: supportsCustomElementsV1 ? BaseCustomElementV1 : BaseCustomElement,\n        Utilities: Utilities,\n        Version: '1.9.2'\n    });\n\n    /**\r\n    * Content element.\r\n    */\n    window.Smart('smart-content-element', function (_window$Smart$BaseEle) {\n        babelHelpers.inherits(ContentElement, _window$Smart$BaseEle);\n\n        function ContentElement() {\n            babelHelpers.classCallCheck(this, ContentElement);\n            return babelHelpers.possibleConstructorReturn(this, (ContentElement.__proto__ || Object.getPrototypeOf(ContentElement)).apply(this, arguments));\n        }\n\n        babelHelpers.createClass(ContentElement, [{\n            key: 'template',\n\n\n            /** Content Element's template. */\n            value: function template() {\n                return '<div inner-h-t-m-l=\\'[[innerHTML]]\\'></div>';\n            }\n        }, {\n            key: 'ready',\n            value: function ready() {\n                babelHelpers.get(ContentElement.prototype.__proto__ || Object.getPrototypeOf(ContentElement.prototype), 'ready', this).call(this);\n\n                var that = this;\n                that.applyContent();\n            }\n        }, {\n            key: 'clearContent',\n            value: function clearContent() {\n                var that = this;\n\n                while (that.$.content.firstChild) {\n                    that.$.content.removeChild(that.$.content.firstChild);\n                }\n            }\n        }, {\n            key: 'applyContent',\n            value: function applyContent() {\n                var that = this;\n\n                if (that.content === undefined) {\n                    that.content = that.$.content;\n                    return;\n                }\n\n                if (that.content === '' || that.content === null) {\n                    that.clearContent();\n                    return;\n                }\n\n                if (that.content instanceof HTMLElement) {\n                    that.clearContent();\n                    that.$.content.appendChild(that.content);\n                    return;\n                }\n\n                var fragment = document.createDocumentFragment();\n\n                /* Create a wrapper DIV tag. */\n                var tmpElement = document.createElement('div');\n                fragment.appendChild(tmpElement);\n\n                /* Fill the nodes array with the wrapper's childNodes. */\n                if (that.content instanceof HTMLElement) {\n                    tmpElement.appendChild(that.content);\n                } else {\n                    tmpElement.innerHTML = that.content;\n                }\n\n                var nodes = tmpElement.childNodes;\n\n                /* Remove the wrapper DIV tag. */\n                tmpElement.parentNode.removeChild(tmpElement);\n\n                /* Add the nodes to the fragment. */\n                var length = nodes.length;\n\n                while (length) {\n                    var currentLength = length;\n                    fragment.appendChild(nodes[0]);\n                    if (length === currentLength) {\n                        length--;\n                    }\n                }\n\n                that.clearContent();\n                that.$.content.appendChild(fragment);\n            }\n        }, {\n            key: 'propertyChangedHandler',\n            value: function propertyChangedHandler(propertyName, oldValue, newValue) {\n                babelHelpers.get(ContentElement.prototype.__proto__ || Object.getPrototypeOf(ContentElement.prototype), 'propertyChangedHandler', this).call(this, propertyName, oldValue, newValue);\n\n                var that = this;\n\n                if (oldValue === newValue) {\n                    return;\n                }\n\n                if (propertyName === 'innerHTML') {\n                    that.content = newValue;\n                    that.applyContent();\n                    that.innerHTML = that.content = Utilities.Core.html(that.$.content);\n                }\n\n                if (propertyName === 'content') {\n                    that.applyContent();\n                }\n            }\n        }], [{\n            key: 'properties',\n\n            // Button's properties.\n            get: function get() {\n                return {\n                    'content': {\n                        type: 'any',\n                        reflectToAttribute: false\n                    },\n                    'innerHTML': {\n                        type: 'string',\n                        reflectToAttribute: false\n                    }\n                };\n            }\n        }]);\n        return ContentElement;\n    }(window.Smart.BaseElement));\n})();"]}